%Patch files loaded: patch2 version 2.414
%                    patch2-test version 1.694

$$$pvs-strategies
(in-package 'pvs)

;;;KH(1.August.96): Refinement Proof for the garbage collector


;;;;;;;;;;;;;;;;;;;;;;
;;;                ;;;
;;;  LEMMA PROOFS  ;;;
;;;                ;;;
;;;;;;;;;;;;;;;;;;;;;;

(defstep mem-prop ()
  (then (auto-rewrite-theory "Memory[NODES,SONS,ROOTS]" :always? T)
        (grind))
  "Used to prove simple memory properties."
  "Proving memory property")


;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;                    ;;;
;;;  INVARIANT PROOFS  ;;;
;;;                    ;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;

(defstep imply ()
  (then
    (expand "IMPLIES")
    (skosimp)
    (expand "I")
    (expand "&")
    (assert))
  "Proves an implication of the invariant I."
  "Proving implication of I")

(defstrat pres (auto-rewr)
  (then (subgoals auto-rewr)(action))
  "Proves pi-property."
  "Proving pi-property")

(defstep subgoals (auto-rewr)
  (then
    (auto-rewrite-mem)
    (auto-rewr)
    (expand "pi")
    (expand "preserved")
    (spread
      (split)
      ((then
         (expand "IMPLIES")
         (skosimp)
         (do-rewrite)
         (grind NIL))
       (then
         (skosimp)
         (stop-rewrite "I")
         (expand "next")
         (expand "MUTATOR")
         (expand "COLLECTOR")
         (split)))))
  "Prepares Proof of pi-property."
  "Preparing proof of pi-property")

(defstep action ()
  (then
    (skolem-typepred)
    (replace*)
    (grind NIL))
  "Tries to prove an action automatically."
  "Proving action")            

(defstep lemma-action ()
  (then
    (expand "IMPLIES")
    (repeat (inst?))
    (action))
  "Proves action on the basis of lemmas."
  "Proving action on basis of lemmas")

(defstep pres-all ()
  (then
    (expand "I")
    (expand "pi")
    (repeat* (then (rewrite "preserved_and" 1)(delete 2))))
  "Proves preservation of I."
  "Proving preservation of I")

(defstep inv-all ()
  (then
    (lemma "p_I")
    (expand "pi")
    (lemma "preserved_inv")
    (inst?)
    (assert))
  "Proves invariant from pi-property."
  "Proving invariant")


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;                                 ;;;
;;;  Auto-rewriting for the Memory  ;;;
;;;                                 ;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(defstep auto-rewrite-mem ()
  (then
    (auto-rewrite-theory "Memory[NODES,SONS,ROOTS]"
      :exclude ("accessible") :always? T))
  "Establishes auto-rewrites for the memory."
  "Establishing auto-rewrites for the memory")


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;                                                     ;;;
;;;  Commands for the THEORY "Garbage_Collector1_Inv":  ;;;
;;;                                                     ;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(defstep auto-rewrite-inv-a ()
  (then
    (auto-rewrite-theory "Garbage_Collector1[NODES,SONS,ROOTS]" :always? T)
    (auto-rewrite-theory "Garbage_Collector1_Inv" :always? T))
  "Establishes auto-rewrites for Garbage_Collector1_Inv."
  "Establishing auto-rewrites for Garbage_Collector1_Inv")

(defstrat pres-a ()
  (pres auto-rewrite-inv-a)
  "Proves pi-property for Garbage_Collector1_Inv."
  "Proving pi-property")


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;                                                     ;;;
;;;  Commands for the THEORY "Garbage_Collector2_Inv":  ;;;
;;;                                                     ;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(defstep auto-rewrite-inv-b ()
  (then
    (auto-rewrite-theory "Garbage_Collector2[NODES,SONS,ROOTS]" :always? T)
    (auto-rewrite-theory "Garbage_Collector2_Inv" :always? T))
  "Establishes auto-rewrites for Garbage_Collector2_Inv."
  "Establishing auto-rewrites for Garbage_Collector2_Inv")

(defstrat pres-b ()
  (pres auto-rewrite-inv-b)
  "Proves pi-property for Garbage_Collector2_Inv."
  "Proving pi-property")


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;                                                     ;;;
;;;  Commands for the THEORY "Garbage_Collector3_Inv":  ;;;
;;;                                                     ;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(defstep auto-rewrite-inv-c ()
  (then
    (auto-rewrite-theory "Garbage_Collector3[NODES,SONS,ROOTS]" :always? T)
    (auto-rewrite-theory "Garbage_Collector3_Inv" :always? T))
  "Establishes auto-rewrites for Garbage_Collector3_Inv."
  "Establishing auto-rewrites for Garbage_Collector3_Inv")

(defstrat pres-c ()
  (pres auto-rewrite-inv-c)
  "Proves pi-property for Garbage_Collector3_Inv."
  "Proving pi-property")


;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;                     ;;;
;;;  REFINEMENT PROOFS  ;;;
;;;                     ;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;
 
(defstrat sim (auto-rewr)
  (then
    (simulate-init auto-rewr)
    (simulate))
  "Tries to prove a simulation automatically."
  "Proving simulation")

(defstep simulate-init (auto-rewr)
  (then
    (auto-rewr)
    (skolem-typepred)
    (flatten)
    (stop-rewrite "I")
    (skosimp)
    (inst?))
  "Initializes simulation proof."
  "Initializing simulation proof")

(defstep simulate ()
  (then
    (do-rewrite)
    (grind NIL))
  "Finishes simulation proof."
  "Proving simulation")    

(defstep lemma-simulate ()
  (then
    (expand "IMPLIES")
    (repeat* (inst?))
    (bddsimp)
    (simulate))
  "Proves simulation on the basis of lemmas."
  "Proving simulation on the basis of lemmas")

(defstep rassert ()
  (let ((record-equality-fnums
	 (find-all-sformnums
		(s-forms (current-goal *ps*))
		'*
		#'(lambda (fmla)
		    (and (equality? fmla)
			 (recordtype?
			  (find-supertype (type (args1 fmla))))))))
	(rest-fnums
	 (find-all-sformnums
		(s-forms (current-goal *ps*))
		'*
		#'(lambda (fmla)
		    (not
		     (and (equality? fmla)
			  (recordtype?
			   (find-supertype (type (args1 fmla))))))))))
    (then (assert rest-fnums)
	  (assert record-equality-fnums)))
  "Asserts all the other formulas before asserting record-equalities
   since the latter can be expensive."
  "Simplifying with rewriting and decision procedures but delaying
   record equalities")

(defstep begin-next ()
  (then
    (skosimp)
    (expand "next")
    (expand "MUTATOR")
    (expand "COLLECTOR")
    (flatten)
    (split))
  "Initializes next-simulation proof."
  "Initializing next-simulation proof")

(defstep end-next ()
  (then
    (inst?)
    (bddsimp)
    (assert))
  "Ends a next-simulation branch using a corresponding lemma."
  "Ending next-simulation branch")

(defstep sim-transitive ()
  (then
    (inst?)
    (inst?)
    (bddsimp))
  "Proves refinement via transitivity."
  "Proving transitive refinement")


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;                                          ;;;
;;;  Commands for the THEORY "Refinement1":  ;;;
;;;                                          ;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(defstep auto-rewrite-ref-a ()
  (then
    (auto-rewrite-theory "Garbage_Collector[NODES,SONS,ROOTS]" :always? T)
    (auto-rewrite-theory "Garbage_Collector1[NODES,SONS,ROOTS]" :always? T)
    (auto-rewrite-theory "Garbage_Collector1_Inv[NODES,SONS,ROOTS]" :always? T)
    (auto-rewrite-theory "Refinement1" :always? T))
  "Establishes auto-rewrites for Refinement1."
  "Establishing auto-rewrites for Refinement1")

(defstrat sim-a ()
  (sim auto-rewrite-ref-a)
  "Proves simulation for Refinement1."
  "Proving simulation")


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;                                          ;;;
;;;  Commands for the THEORY "Refinement2":  ;;;
;;;                                          ;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(defstep auto-rewrite-ref-b ()
  (then
    (auto-rewrite-theory "Garbage_Collector1[NODES,SONS,ROOTS]" :always? T)
    (auto-rewrite-theory "Garbage_Collector2[NODES,SONS,ROOTS]" :always? T)
    (auto-rewrite-theory "Garbage_Collector2_Inv[NODES,SONS,ROOTS]" :always? T)
    (auto-rewrite-theory "Refinement2" :always? T))
  "Establishes auto-rewrites for Refinement2."
  "Establishing auto-rewrites for Refinement2")

(defstrat sim-b ()
  (sim auto-rewrite-ref-b)
  "Proves simulation for Refinement2."
  "Proving simulation")


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;                                          ;;;
;;;  Commands for the THEORY "Refinement3":  ;;;
;;;                                          ;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(defstep auto-rewrite-ref-c ()
  (then
    (auto-rewrite-theory "Garbage_Collector2[NODES,SONS,ROOTS]" :always? T)
    (auto-rewrite-theory "Garbage_Collector3[NODES,SONS,ROOTS]" :always? T)
    (auto-rewrite-theory "Garbage_Collector3_Inv[NODES,SONS,ROOTS]" :always? T)
    (auto-rewrite-theory "Refinement3" :always? T))
  "Establishes auto-rewrites for Refinement3."
  "Establishing auto-rewrites for Refinement3")

(defstrat sim-c ()
  (sim auto-rewrite-ref-c)
  "Proves simulation for Refinement3."
  "Proving simulation")



$$$PVSHOME/pvs-strategies
(setq *rewrite-msg-off* t)

(defstep propeq1 (&optional (fnums *)) (apply (rewrite "Propeq1" fnums))
"V(f0 /\\ f1 => f2) = V(f0 => (f1 => f2))"
"Using V(f0 /\\ f1 => f2) = V(f0 => (f1 => f2))")
(defstep propeq2 (&optional (fnums *)) (apply (rewrite "Propeq2" fnums))
"V(f0 /\\ f1 => f2) = V(f1 => (f0 => f2))"
"Using V(f0 /\\ f1 => f2) = V(f1 => (f0 => f2))")
(defstep propeq4 (&optional (fnums *)) (apply (rewrite "Propeq4" fnums))
"V(f0 => (f1 \\/ f2)) = V((-f2) => (f0 => f1))"
"Using V(f0 => (f1 \\/ f2)) = V((-f2) => (f0 => f1))")
(defstep propeq5 (&optional (fnums *)) (apply (rewrite "Propeq5" fnums))
"V(-f0 => -f1) = V(f1 => f0)"
"Using V(-f0 => -f1) = V(f1 => f0)")
(defstep propeq6 (&optional (fnums *)) (apply (rewrite "Propeq6" fnums))
"V(f0 => (-f1 => -f2)) = V(f0 => (f2 => f1))"
"Using V(f0 => (-f1 => -f2)) = V(f0 => (f2 => f1))")
(defstep propeq7 (&optional (fnums *)) (apply (rewrite "Propeq7" fnums))
"V((-f0) == (-f1)) = V(f0 == f1)"
"Using V((-f0) == (-f1)) = V(f0 == f1)")
(defstep propeq8 (&optional (fnums *)) (apply (rewrite "Propeq8" fnums))
"V(f0 == f1) = V(f1 == f0)"
"Using V(f0 == f1) = V(f1 == f0)")
(defstep propeq10 (&optional (fnums *)) (apply (rewrite "Propeq10" fnums))
"V(T => f0) = V(f0)"
"Using V(T => f0) = V(f0)")
(defstep propeq11 (&optional (fnums *)) (apply (rewrite "Propeq11" fnums))
"V((f0 /\\ -f1) => f2) = V(f0 => (f2 \\/ f1))"
"Using V((f0 /\\ -f1) => f2) = V(f0 => (f2 \\/ f1))")

(defstep propimp1 (&optional (fnums *)) (apply (rewrite "Propimp1" fnums))
"(f0 => f1) and (f2 => f1) implies ((f0 \/ f2) => f1)"
"Using (f0 => f1) and (f2 => f1) implies ((f0 \\/ f2) => f1)")
(defstep propimp2 (&optional (fnums *)) (apply (rewrite "Propimp2" fnums))
"(f0 => f1) and (f1 => f0) implies (f0 == f1)"
"Using (f0 => f1) and (f1 => f0) implies (f0 == f1)")
(defstep propimp5 (&optional (fnums *)) (apply (rewrite "Propimp5" fnums))
"(f0 => f1) and (f0 => f2) implies (f0 => (f1 /\\ f2))"
"Using (f0 => f1) and (f0 => f2) implies (f0 => (f1 /\\ f2))")
(defstep propimp12 (&optional (fnums *)) (apply (rewrite "Propimp12" fnums))
"(f0 => f1) implies ((f2 => f0) => (f2 => f1))"
"Using (f0 => f1) implies ((f2 => f0) => (f2 => f1))")

(defstep prop2 (&optional (fnums *)) (apply (rewrite "Prop2" fnums))
"f1 => (f0 \\/ f1)"
"Using f1 => (f0 \\/ f1)")
(defstep prop5 (&optional (fnums *)) (apply (rewrite "Prop5" fnums))
"(f0 == --f0)"
"Using (f0 == --f0)")
(defstep prop7 (&optional (fnums *)) (apply (rewrite "Prop7" fnums))
"(f0 == f0)"
"Using (f0 == f0)")
(defstep prop10 (&optional (fnums *)) (apply (rewrite "Prop10" fnums))
"f0 => f0"
"Using f0 => f0")
(defstep prop11 (&optional (fnums *)) (apply (rewrite "Prop11" fnums))
"f0 => (f0 \\/ f1)"
"Using f0 => (f0 \\/ f1)")

(defstep chopassoc (&optional (fnums *)) (apply (rewrite "ChopAssoc" fnums))
"((f0^f1)^f2) == (f0^(f1^f2))"
"Using ((f0^f1)^f2) == (f0^(f1^f2))")
(defstep orchopimp (&optional (fnums *)) (apply (rewrite "OrChopImp" fnums))
"((f0 \\/ f1)^f2) => ((f0^f2) \\/ (f1^f2))"
"Using ((f0 \\/ f1)^f2) => ((f0^f2) \\/ (f1^f2))")
(defstep choporimp (&optional (fnums *)) (apply (rewrite "ChopOrImp" fnums))
"(f0^(f1 \\/ f2)) => ((f0^f1) \\/ (f0^f2)) "
"Using (f0^(f1 \\/ f2)) => ((f0^f1) \\/ (f0^f2))")
(defstep chopempty (&optional (fnums *)) (apply (rewrite "ChopEmpty" fnums))
"(f1^empty) == f1"
"Using (f1^empty) == f1")
(defstep emptyfinite (&optional (fnums *)) (apply (rewrite "EmptyFinite" fnums))
"empty => finite"
"Using empty => finite")

(defstep leftchopimpchop (&optional (fnums *)) (apply (rewrite "LeftChopImpChop" fnums))
"(f0 => f1) implies ((f0^f2) => (f1^f2))"
"Using (f0 => f1) implies ((f0^f2) => (f1^f2))")
(defstep rightchopimpchop (&optional (fnums *)) (apply (rewrite "RightChopImpChop" fnums))
"((f0 => f1)) implies ((f2^f0) => (f2^f1))"
"Using ((f0 => f1)) implies ((f2^f0) => (f2^f1))")
(defstep leftchopeqvchop (&optional (fnums *)) (apply (rewrite "LeftChopEqvChop" fnums))
"(f0 == f1) implies ((f0^f2) == (f1^f2))"
"Using (f0 == f1) implies ((f0^f2) == (f1^f2))")
(defstep rightchopeqvchop (&optional (fnums *)) (apply (rewrite "RightChopEqvChop" fnums))
"((f0 == f1)) implies ((f2^f0) == (f2^f1))"
"Using ((f0 == f1)) implies ((f2^f0) == (f2^f1))")

(defstep propimp3 () (apply (forward-chain "Propimp3"))
"(f0 == f1) implies ((f0 => f1) and (f1 => f0))"
"Using (f0 == f1) implies ((f0 => f1) and (f1 => f0))")
(defstep propimp4 () (apply (forward-chain "Propimp4"))
"(f1 == f0) and (f2 => f1) implies (f2 => f0)"
"Using (f1 == f0) and (f2 => f1) implies (f2 => f0)")
(defstep propimp6 () (apply (forward-chain "Propimp6"))
"(f0 => (f1 /\\ f2)) implies ((f0 => f1) and (f0 => f2))"
"Using (f0 => (f1 /\ f2)) implies ((f0 => f1) and (f0 => f2))")
(defstep propimp7 () (apply (forward-chain "Propimp7"))
"(f1 == f0) and (f2 == f1) implies (f2 == f0)"
"Using (f1 == f0) and (f2 == f1) implies (f2 == f0)")
(defstep propimp8 () (apply (forward-chain "Propimp8"))
"(f0 == f1) and (f2 => -f0) implies (f2 => -f1)"
"Using (f0 == f1) and (f2 => -f0) implies (f2 => -f1)")
(defstep propimp9 () (apply (forward-chain "Propimp9"))
"(f0 => f1) and (f1 => f2) implies (f0 =>f2)"
"Using (f0 => f1) and (f1 => f2) implies (f0 =>f2)")
(defstep propimp10 () (apply (forward-chain "Propimp10"))
"(f0 == f1) and (f0 => f2) implies (f1 =>f2)"
"Using (f0 == f1) and (f0 => f2) implies (f1 =>f2)")
(defstep propimp14 () (apply (forward-chain "Propimp14"))
"(f0 => (f1 == f2)) implies ((f0 => (f1 => f2)) and (f0 => (f2 =>f1)))"
"Using (f0=>(f1 == f2)) implies ((f0=>(f1 => f2)) and (f0=>(f2=> f1)))")

(defstep mp () (apply (forward-chain "MP"))
"V(f0 => f1) AND V(f0) IMPLIES V(f1)"
"Using V(f0 => f1) AND V(f0) IMPLIES V(f1)")
(defstep boxgen () (apply (forward-chain "BoxGen"))
"V(f0) IMPLIES V([](f0))"
"Using V(f0) IMPLIES V([](f0))")
(defstep bigen () (apply(forward-chain "BiGen"))
"V(f0) IMPLIES V(Bi(f0))"
"Using V(f0) IMPLIES V(Bi(f0))")


(defstep state (type &optional (fnums *)) (then  (EXPAND "subterm" fnums (1
2 3 4 9)) (typepred type) (prop))
"expand subterm and then prop"
"expand subterm and then prop")

(defstep sem () (then (auto-rewrite-theory "itlsynextra")  (auto-rewrite-theory "itlformsemanticsnew") (auto-rewrite-theory "itlexpsemantics") (do-rewrite))
"giving the semantics"
"giving the semantics")

(defstep emptychop ()
  (else (rewrite "EmptyChop") (forward-chain "EmptyChop"))
""
"Using EmptyChop axiom")
(defstep biboxchopimpchop ()
  (else (rewrite "BiBoxChopImpChop") (forward-chain "BiBoxChopImpChop"))
""
"Using BiBoxChopImpChop axiom")
(defstep stateimpbi ()
  (else (rewrite "StateImpBi") (forward-chain "StateImpBi"))
""
"Using StateImpBi axiom")
(defstep nextimpnotnextnot ()
  (else (rewrite "NextImpNotNextNot") (forward-chain "NextImpNotNextNot"))
""
"Using NextImpNotNextNot axiom")
(defstep keepnowimpnotkeepnownot ()
  (else (rewrite "KeepnowImpNotKeepnowNot") (forward-chain "KeepnowImpNotKeepnowNot"))
""
"Using KeepnowImpNotKeepnowNot axiom")
(defstep boxinduct ()
  (else (rewrite "BoxInduct") (forward-chain "BoxInduct"))
""
"Using BoxInduct axiom")
(defstep chopstareqv ()
  (else (rewrite "ChopStarEqv") (forward-chain "ChopStarEqv"))
""
"Using ChopStarEqv axiom")
(defstep infchop ()
  (else (rewrite "InfChop") (forward-chain "InfChop"))
""
"Using InfChop axiom")

(defstep forallgen ()
  (else (rewrite "ForallGen") (forward-chain "ForallGen"))
""
"Using ForallGen rule")


$$$compose.pvs

Composed_Refinement[
  NODES : posnat,
  SONS  : posnat,
  ROOTS : posnat] : THEORY
 
BEGIN
 
  ASSUMING
    roots_within : ASSUMPTION ROOTS <= NODES
  ENDASSUMING

  IMPORTING Refinement1[NODES,SONS,ROOTS]
  IMPORTING Refinement2[NODES,SONS,ROOTS]
  IMPORTING Refinement3[NODES,SONS,ROOTS]

  IMPORTING Refine_Predicate
  IMPORTING Refine_Predicate_Transitive

  ref2 : LEMMA 
    refines[S.O_State,S.State,I2.State]
      (I2.init,I2.next,I2.proj)(S.init,S.next,S.proj)

  ref : THEOREM 
    refines[S.O_State,S.State,I3.State]
      (I3.init,I3.next,I3.proj)(S.init,S.next,S.proj)

END Composed_Refinement

$$$compose.prf
(|Composed_Refinement|
 (IMPORTING1_TCC1 "" (LEMMA "roots_within") (("" (PROPAX) NIL)))
 (|ref2| "" (LEMMA "R1.ref")
  (("" (LEMMA "R2.ref")
    (("" (LEMMA "transitive[S.O_State,S.State,I1.State,I2.State]")
      (("" (SIM-TRANSITIVE) (("" (USE "roots_within") NIL)))))))))
 (|ref| "" (LEMMA "ref2")
  (("" (LEMMA "R3.ref")
    (("" (LEMMA "transitive[S.O_State,S.State,I2.State,I3.State]")
      (("" (SIM-TRANSITIVE) NIL))))))))

$$$lib.pvs

Traces[State : TYPE] : THEORY

BEGIN

  init : VAR pred[State]
  next : VAR pred[[State,State]]
  sq   : VAR sequence[State]
  n    : VAR nat

  trace(init,next)(sq):bool =
    init(sq(0)) AND
    FORALL n: next(sq(n),sq(n+1))

  p  : VAR pred[State]

  invariant(init,next)(p):bool =
    FORALL (tr:(trace(init,next))): FORALL n: p(tr(n))

END Traces


Refine_Predicate[
  O_State : TYPE,
  S_State : TYPE,
  I_State : TYPE] : THEORY

BEGIN

  IMPORTING Traces

  s_init : VAR pred[S_State]
  s_next : VAR pred[[S_State,S_State]]
  s_proj : VAR [S_State -> O_State]

  i_init : VAR pred[I_State]
  i_next : VAR pred[[I_State,I_State]]
  i_proj : VAR [I_State -> O_State]

  refines(i_init,i_next,i_proj)(s_init,s_next,s_proj):bool =
    FORALL (i_tr:(trace(i_init,i_next))):
      EXISTS (s_tr:(trace(s_init,s_next))): 
        map(i_proj,i_tr) = map(s_proj,s_tr)  

END Refine_Predicate


Refine_Predicate_Transitive[
  O_State : TYPE,
  State1  : TYPE,
  State2  : TYPE,
  State3  : TYPE] : THEORY

BEGIN

  IMPORTING Refine_Predicate

  init1 : VAR pred[State1]
  next1 : VAR pred[[State1,State1]]
  proj1 : VAR [State1 -> O_State]

  init2 : VAR pred[State2]
  next2 : VAR pred[[State2,State2]]
  proj2 : VAR [State2 -> O_State]
  
  init3 : VAR pred[State3]
  next3 : VAR pred[[State3,State3]]
  proj3 : VAR [State3 -> O_State]

  transitive : LEMMA 
    refines[O_State,State2,State3]
      (init3,next3,proj3)(init2,next2,proj2) AND 
    refines[O_State,State1,State2]
      (init2,next2,proj2)(init1,next1,proj1)
      IMPLIES
    refines[O_State,State1,State3]
      (init3,next3,proj3)(init1,next1,proj1)

END Refine_Predicate_Transitive


Refinement[
  O_State : TYPE,

  S_State : TYPE,
  S_init  : pred[S_State],
  S_next  : pred[[S_State,S_State]],
  S_proj  : [S_State -> O_State],

  I_State : TYPE,
  I_init  : pred[I_State],
  I_next  : pred[[I_State,I_State]],
  I_proj  : [I_State -> O_State],

  abs     : [I_State -> S_State],
  I_inv   : [I_State -> bool]] : THEORY

BEGIN

  ASSUMING

    IMPORTING Traces

    s     : VAR I_State
    r1,r2 : VAR (I_inv)

    proj_id : ASSUMPTION
      FORALL s: S_proj(abs(s)) = I_proj(s)

    init_h : ASSUMPTION 
      FORALL s: I_init(s) IMPLIES S_init(abs(s))

    next_h : ASSUMPTION 
      I_next(r1,r2) IMPLIES S_next(abs(r1),abs(r2))

    invar : ASSUMPTION
      invariant(I_init,I_next)(I_inv)

  ENDASSUMING

  IMPORTING Refine_Predicate[O_State,S_State,I_State]

  ref : THEOREM refines(I_init,I_next,I_proj)
                       (S_init,S_next,S_proj)

END Refinement


Invariant_Predicates[State : TYPE] : THEORY

BEGIN

  IMPORTING Traces[State]

  p,p1,p2 : VAR pred[State]
  s,s1,s2 : VAR State
  init    : VAR pred[State]
  next    : VAR pred[[State,State]]
  inv     : VAR pred[State]

  IMPLIES(p1,p2):bool = FORALL s: p1(s) IMPLIES p2(s);

  &(p1,p2):pred[State] = LAMBDA s: p1(s) AND p2(s)

  preserved(init,next)(inv)(p):bool =
    (init IMPLIES p) AND
    FORALL s1,s2:
      inv(s1) AND p(s1) AND next(s1,s2) IMPLIES p(s2)   

  preserved_and : LEMMA 
    preserved(init,next)(inv)(p1) AND 
    preserved(init,next)(inv)(p2) 
      IMPLIES 
    preserved(init,next)(inv)(p1 & p2)

  preserved_inv : LEMMA 
    preserved(init,next)(inv)(inv) IMPLIES invariant(init,next)(inv)

END Invariant_Predicates



$$$lib.prf
(|Traces|)(|Refine_Predicate|)(|Refine_Predicate_Transitive|
                               (|transitive| "" (SKOLEM-TYPEPRED)
                                (("" (FLATTEN)
                                  (("" (EXPAND "refines" +)
                                    (("" (SKOLEM-TYPEPRED)
                                      ((""
                                        (EXPAND "refines")
                                        ((""
                                          (INST?)
                                          ((""
                                            (SKOLEM!)
                                            ((""
                                              (INST?)
                                              ((""
                                                (SKOLEM!)
                                                ((""
                                                  (INST?)
                                                  ((""
                                                    (ASSERT)
                                                    NIL))))))))))))))))))))))(|Refinement|
                                                                              (|ref|
                                                                               ""
                                                                               (EXPAND
                                                                                "refines")
                                                                               ((""
                                                                                 (SKOLEM-TYPEPRED)
                                                                                 ((""
                                                                                   (INST
                                                                                    +
                                                                                    "map(abs,i_tr!1)")
                                                                                   (("1"
                                                                                     (LEMMA
                                                                                      "proj_id")
                                                                                     (("1"
                                                                                       (DELETE

                                                                                        -2)
                                                                                       (("1"
                                                                                         (APPLY-EXTENSIONALITY)
                                                                                         (("1"
                                                                                           (DELETE

                                                                                            2)
                                                                                           (("1"
                                                                                             (GRIND)
                                                                                             NIL)))))))))
                                                                                    ("2"
                                                                                     (LEMMA
                                                                                      "invar")
                                                                                     (("2"
                                                                                       (EXPAND
                                                                                        "invariant")
                                                                                       (("2"
                                                                                         (INST
                                                                                          -1
                                                                                          "i_tr!1")
                                                                                         (("2"
                                                                                           (EXPAND
                                                                                            "trace")
                                                                                           (("2"
                                                                                             (FLATTEN)
                                                                                             (("2"
                                                                                               (SPLIT)
                                                                                               (("1"
                                                                                                 (DELETE

                                                                                                  -1
                                                                                                  -3)
                                                                                                 (("1"
                                                                                                   (LEMMA
                                                                                                    "init_h")
                                                                                                   (("1"
                                                                                                     (GRIND)
                                                                                                     NIL)))))
                                                                                                ("2"
                                                                                                 (DELETE

                                                                                                  -2)
                                                                                                 (("2"
                                                                                                   (SKOLEM!)
                                                                                                   (("2"
                                                                                                     (INST-CP
                                                                                                      -
                                                                                                      "n!1+1")
                                                                                                     (("2"
                                                                                                       (INST
                                                                                                        -
                                                                                                        "n!1")
                                                                                                       (("2"
                                                                                                         (INST?)
                                                                                                         (("2"
                                                                                                           (EXPAND
                                                                                                            "map")
                                                                                                           (("2"
                                                                                                             (EXPAND
                                                                                                              "nth")
                                                                                                             (("2"
                                                                                                               (LEMMA
                                                                                                                "next_h")
                                                                                                               (("2"
                                                                                                                 (INST?)
                                                                                                                 (("1"
                                                                                                                   (ASSERT)
                                                                                                                   NIL)
                                                                                                                  ("2"
                                                                                                                   (ASSERT)
                                                                                                                   NIL))))))))))))))))))))))))))))))))))))))(|Invariant_Predicates|
                                                                                                                                                             (|preserved_and|
                                                                                                                                                              ""
                                                                                                                                                              (SKOLEM!)
                                                                                                                                                              ((""
                                                                                                                                                                (FLATTEN)
                                                                                                                                                                ((""
                                                                                                                                                                  (EXPAND
                                                                                                                                                                   "preserved")
                                                                                                                                                                  ((""
                                                                                                                                                                    (FLATTEN)
                                                                                                                                                                    ((""
                                                                                                                                                                      (SPLIT)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (DELETE

                                                                                                                                                                         -2
                                                                                                                                                                         -4)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (EXPAND
                                                                                                                                                                           "IMPLIES")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (EXPAND
                                                                                                                                                                             "&")
                                                                                                                                                                            (("1"
                                                                                                                                                                              (SKOLEM!)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (INST?)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (INST?)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (BDDSIMP)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (PROPAX)
                                                                                                                                                                                      NIL)))))))))))))))
                                                                                                                                                                       ("2"
                                                                                                                                                                        (DELETE

                                                                                                                                                                         -1
                                                                                                                                                                         -3)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (SKOLEM!)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (FLATTEN)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (EXPAND
                                                                                                                                                                               "&")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (INST?)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (INST?)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (BDDSIMP)
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (PROPAX)
                                                                                                                                                                                      NIL)))))))))))))))))))))))))
                                                                                                                                                             (|preserved_inv|
                                                                                                                                                              ""
                                                                                                                                                              (SKOLEM!)
                                                                                                                                                              ((""
                                                                                                                                                                (FLATTEN)
                                                                                                                                                                ((""
                                                                                                                                                                  (EXPAND
                                                                                                                                                                   "invariant")
                                                                                                                                                                  ((""
                                                                                                                                                                    (EXPAND
                                                                                                                                                                     "preserved")
                                                                                                                                                                    ((""
                                                                                                                                                                      (FLATTEN)
                                                                                                                                                                      ((""
                                                                                                                                                                        (SKOLEM-TYPEPRED)
                                                                                                                                                                        ((""
                                                                                                                                                                          (EXPAND
                                                                                                                                                                           "trace")
                                                                                                                                                                          ((""
                                                                                                                                                                            (FLATTEN)
                                                                                                                                                                            ((""
                                                                                                                                                                              (INDUCT
                                                                                                                                                                               "n")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (DELETE

                                                                                                                                                                                 -2
                                                                                                                                                                                 -4)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (GRIND)
                                                                                                                                                                                  NIL)))
                                                                                                                                                                               ("2"
                                                                                                                                                                                (SKOSIMP)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (DELETE

                                                                                                                                                                                   -2
                                                                                                                                                                                   -4)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (INST?)
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (INST?)
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (ASSERT)
                                                                                                                                                                                        NIL))))))))))))))))))))))))))))
$$$impl3.pvs

Garbage_Collector3[
  NODES : posnat, 
  SONS  : posnat, 
  ROOTS : posnat] : THEORY

BEGIN

  ASSUMING
    roots_within : ASSUMPTION ROOTS <= NODES
  ENDASSUMING

  IMPORTING Coloured_Memory[NODES,SONS,ROOTS]
  
  MuPC    : TYPE = {MUTATE,COLOUR}
  CoPC    : TYPE = {COLOUR_ROOTS,TEST_I,TEST_COLOUR,COLOUR_SONS,
                    TEST_H,COUNT,COMPARE,TEST_L,APPEND}

  State   : TYPE = [# MU : MuPC, CHI : CoPC, 
                      Q : nat, BC : nat, OBC : nat,
                      H : nat, I : nat, J : nat, K : nat, L : nat,  
                      C : Colours, M : Memory #]

  O_State : TYPE = Memory

  s,s1,s2 : VAR State
  n,k     : VAR Node
  i       : VAR Index

  proj(s):O_State = M(s)

  init(s):bool = 
      MU(s) = MUTATE
    & CHI(s) = COLOUR_ROOTS
    & OBC(s) = 0
    & K(s) = 0 
    & M(s) = null_array

  %%%%%%%%%%%%%%%%%%%%%%%
  % The MUTATOR Process %
  %%%%%%%%%%%%%%%%%%%%%%%

  Rule_mutate(n,i,k)(s):State =
    IF MU(s) = MUTATE AND accessible(k)(M(s)) THEN 
      s WITH [M := set_son(n,i,k)(M(s)),
              Q := k,
              MU := COLOUR]
    ELSE 
      s
    ENDIF

  Rule_colour_target(s):State =
    IF MU(s) = COLOUR AND Q(s) < NODES THEN 
      s WITH [C := set_colour(Q(s),TRUE)(C(s)),
              MU := MUTATE]
    ELSE 
      s
    ENDIF

  MUTATOR(s1,s2):bool =
       (EXISTS n,i,k: s2 = Rule_mutate(n,i,k)(s1))
    OR s2 = Rule_colour_target(s1)


  %%%%%%%%%%%%%%%%%%%%%%%%%
  % The COLLECTOR Process %
  %%%%%%%%%%%%%%%%%%%%%%%%%

  Rule_stop_colouring_roots(s):State =
    IF CHI(s) = COLOUR_ROOTS AND K(s) = ROOTS THEN
      s WITH [I := 0, CHI := TEST_I]
    ELSE
      s
    ENDIF

  Rule_colour_root(s):State =
    IF CHI(s) = COLOUR_ROOTS AND K(s) < ROOTS THEN
      s WITH [C := set_colour(K(s),TRUE)(C(s)),
              K := K(s) + 1]
    ELSE
      s
    ENDIF

  Rule_stop_propagating(s):State =
    IF CHI(s) = TEST_I AND I(s) = NODES THEN 
      s WITH [BC := 0, H := 0, CHI := TEST_H]
    ELSE 
      s
    ENDIF

  Rule_continue_propagating(s):State =
    IF CHI(s) = TEST_I AND I(s) < NODES THEN
      s WITH [CHI := TEST_COLOUR]
    ELSE 
      s
    ENDIF

  Rule_white_node(s):State =
    IF CHI(s) = TEST_COLOUR AND I(s) < NODES AND NOT colour(I(s))(C(s)) THEN
      s WITH [I := I(s) + 1, CHI := TEST_I]
    ELSE 
      s
    ENDIF

  Rule_black_node(s):State =
    IF CHI(s) = TEST_COLOUR AND I(s) < NODES AND colour(I(s))(C(s)) THEN
      s WITH [J := 0, CHI := COLOUR_SONS]
    ELSE 
      s
    ENDIF

  Rule_stop_colouring_sons(s):State =
    IF CHI(s) = COLOUR_SONS AND J(s) = SONS THEN
      s WITH [I := I(s) + 1, CHI := TEST_I]
    ELSE 
      s
    ENDIF

  Rule_colour_son(s):State =
    IF CHI(s) = COLOUR_SONS AND I(s) < NODES AND J(s) < SONS THEN
      s WITH [C := set_colour(son(I(s),J(s))(M(s)),TRUE)(C(s)), 
              J := J(s) + 1]
    ELSE
      s
    ENDIF

  Rule_stop_counting(s):State =
    IF CHI(s) = TEST_H AND H(s) = NODES THEN
      s WITH [CHI := COMPARE]
    ELSE 
      s
    ENDIF

  Rule_continue_counting(s):State =
    IF CHI(s) = TEST_H AND H(s) /= NODES THEN
      s WITH [CHI := COUNT]
    ELSE 
      s
    ENDIF

  Rule_skip_white(s):State =
    IF CHI(s) = COUNT AND H(s) < NODES AND NOT colour(H(s))(C(s)) THEN
      s WITH [H := H(s) + 1, CHI := TEST_H]
    ELSE 
      s
    ENDIF

  Rule_count_black(s):State =
    IF CHI(s) = COUNT AND H(s) < NODES AND colour(H(s))(C(s)) THEN
      s WITH [BC := BC(s) + 1, H := H(s) + 1, CHI := TEST_H]
    ELSE 
      s
    ENDIF

  Rule_stop_colouring(s):State =
    IF CHI(s) = COMPARE AND BC(s) = OBC(s) THEN
      s WITH [L := 0, CHI := TEST_L]
    ELSE 
      s
    ENDIF

  Rule_continue_colouring(s):State =
    IF CHI(s) = COMPARE AND BC(s) /= OBC(s) THEN
      s WITH [OBC := BC(s), I := 0, CHI := TEST_I]
    ELSE 
      s
    ENDIF

  Rule_stop_appending(s):State =
    IF CHI(s) = TEST_L AND L(s) = NODES THEN
      s WITH [BC := 0, OBC := 0, K := 0, CHI := COLOUR_ROOTS]
    ELSE
      s
    ENDIF

  Rule_continue_appending(s):State =
    IF CHI(s) = TEST_L AND L(s) < NODES THEN
      s WITH [CHI := APPEND]
    ELSE 
      s 
    ENDIF

  Rule_black_to_white(s):State =
    IF CHI(s) = APPEND AND L(s) < NODES AND colour(L(s))(C(s)) THEN
      s WITH [C := set_colour(L(s),FALSE)(C(s)),
              L := L(s)+1, CHI := TEST_L]
    ELSE 
      s 
    ENDIF

  Rule_append_white(s):State =
    IF CHI(s) = APPEND AND L(s) < NODES AND NOT colour(L(s))(C(s)) THEN
      s WITH [M := append_to_free(L(s))(M(s)),
              L := L(s) + 1, CHI := TEST_L]
    ELSE 
      s 
    ENDIF

  COLLECTOR(s1,s2):bool =
     s2 = Rule_stop_colouring_roots(s1)
  OR s2 = Rule_colour_root(s1)
  OR s2 = Rule_stop_propagating(s1)
  OR s2 = Rule_continue_propagating(s1)
  OR s2 = Rule_white_node(s1)
  OR s2 = Rule_black_node(s1)
  OR s2 = Rule_stop_colouring_sons(s1)
  OR s2 = Rule_colour_son(s1)
  OR s2 = Rule_stop_counting(s1)
  OR s2 = Rule_continue_counting(s1)
  OR s2 = Rule_skip_white(s1)
  OR s2 = Rule_count_black(s1)
  OR s2 = Rule_stop_colouring(s1)
  OR s2 = Rule_continue_colouring(s1)
  OR s2 = Rule_stop_appending(s1)
  OR s2 = Rule_continue_appending(s1)
  OR s2 = Rule_black_to_white(s1)
  OR s2 = Rule_append_white(s1)


  %%%%%%%%%%%%%%%%%%%%%%%%%%%
  % The Transition Relation %
  %%%%%%%%%%%%%%%%%%%%%%%%%%%

  next(s1,s2):bool =
    MUTATOR(s1,s2) OR
    COLLECTOR(s1,s2) OR
    s2 = s1

END Garbage_Collector3


Garbage_Collector3_Inv[
  NODES : posnat, 
  SONS  : posnat, 
  ROOTS : posnat] : THEORY

BEGIN

  ASSUMING
    roots_within : ASSUMPTION ROOTS <= NODES
  ENDASSUMING

  IMPORTING Memory_Properties[NODES,SONS,ROOTS]
  IMPORTING Garbage_Collector3[NODES,SONS,ROOTS]
  IMPORTING Invariant_Predicates[State]

  s : VAR State

  inv1(s):bool =
    CHI(s)=COLOUR_SONS AND I(s) < NODES IMPLIES colour(I(s))(C(s))

  inv2(s):bool =
    CHI(s)=COMPARE AND BC(s)=OBC(s) IMPLIES NOT exists_bw(C(s),M(s))

  inv3(s):bool =
    (CHI(s)=COLOUR_ROOTS OR 
     CHI(s)=TEST_I OR CHI(s)=TEST_COLOUR OR CHI(s)=COLOUR_SONS OR
     CHI(s)=TEST_H OR CHI(s)=COUNT OR CHI(s)=COMPARE)
       IMPLIES
     black_roots(IF CHI(s)=COLOUR_ROOTS THEN K(s) ELSE ROOTS ENDIF)(C(s))

  inv4(s):bool =
    MU(s)=COLOUR AND Q(s) < NODES IMPLIES accessible(Q(s))(M(s))

  inv5(s):bool =
    (CHI(s)=TEST_H OR CHI(s)=COUNT OR CHI(s)=COMPARE) AND
    OBC(s) = BC(s) + blacks(H(s),NODES)(C(s))
      IMPLIES
    NOT exists_bw(C(s),M(s))

  inv6(s):bool =
    CHI(s)=APPEND AND L(s) < NODES AND accessible(L(s))(M(s))
      IMPLIES
    colour(L(s))(C(s))

  inv7(s):bool =
    ((CHI(s)=TEST_I OR CHI(s)=TEST_COLOUR OR CHI(s)=COLOUR_SONS) AND
      OBC(s) = blacks(0,NODES)(C(s)) AND
      exists_bw(0,0,I(s),IF CHI(s)=COLOUR_SONS THEN J(s) ELSE 0 ENDIF)(C(s),M(s)))
    IMPLIES
      exists_bw(I(s),IF CHI(s)=COLOUR_SONS THEN J(s) ELSE 0 ENDIF,NODES,0)
        (C(s),M(s))

  inv8(s):bool =
    (CHI(s)=TEST_H OR CHI(s)=COUNT OR CHI(s)=COMPARE)
      IMPLIES
    OBC(s) <= BC(s) + blacks(H(s),NODES)(C(s))

  inv9(s):bool =
    ((CHI(s)=TEST_I OR CHI(s)=TEST_COLOUR OR CHI(s)=COLOUR_SONS) AND
      OBC(s) = blacks(0,NODES)(C(s)) AND
      exists_bw(0,0,I(s),IF CHI(s)=COLOUR_SONS THEN J(s) ELSE 0 ENDIF)(C(s),M(s)))
    IMPLIES
      MU(s)=COLOUR

  inv10(s):bool =
    (CHI(s)=COLOUR_ROOTS OR 
     CHI(s)=TEST_I OR CHI(s)=TEST_COLOUR OR CHI(s)=COLOUR_SONS)
      IMPLIES
    OBC(s) <= blacks(0,NODES)(C(s))

  inv11(s):bool =
    FORALL (n:Node,i:Index):
      (((CHI(s)=TEST_I OR CHI(s)=TEST_COLOUR OR CHI(s)=COLOUR_SONS) AND
          OBC(s) = blacks(0,NODES)(C(s)) AND
         (n,i) < (I(s),IF CHI(s)=COLOUR_SONS THEN J(s) ELSE 0 ENDIF) AND
         bw(n,i)(C(s),M(s)))
      IMPLIES
        (MU(s)=COLOUR AND son(n,i)(M(s))=Q(s)))

  inv12(s):bool =
    ((CHI(s)=TEST_COLOUR OR CHI(s)=COLOUR_SONS) IMPLIES I(s) < NODES)

  inv13(s):bool =
    (CHI(s)=TEST_L OR CHI(s)=APPEND)
      IMPLIES
    blackened(L(s))(C(s),M(s))

  inv14(s):bool =
    CHI(s)=COMPARE IMPLIES BC(s) <= blacks(0,NODES)(C(s))

  inv15(s):bool =
    (CHI(s)=TEST_H OR CHI(s)=COUNT) IMPLIES BC(s) <= blacks(0,H(s))(C(s))

  I : pred[State] = 
    inv1 & inv2  & inv3  & inv4  & inv5  & inv6  & inv7 & 
    inv8 & inv10 & inv11 & inv12 & inv13 & inv14 & inv15

  pi : pred[pred[State]] = preserved(init,next)(I)

  c_inv9 : LEMMA inv11 IMPLIES inv9

  i_inv1  : LEMMA I IMPLIES inv1
  i_inv2  : LEMMA I IMPLIES inv2
  i_inv3  : LEMMA I IMPLIES inv3
  i_inv4  : LEMMA I IMPLIES inv4
  i_inv5  : LEMMA I IMPLIES inv5
  i_inv6  : LEMMA I IMPLIES inv6
  i_inv7  : LEMMA I IMPLIES inv7
  i_inv8  : LEMMA I IMPLIES inv8
  i_inv9  : LEMMA I IMPLIES inv9
  i_inv10 : LEMMA I IMPLIES inv10
  i_inv11 : LEMMA I IMPLIES inv11
  i_inv12 : LEMMA I IMPLIES inv12
  i_inv13 : LEMMA I IMPLIES inv13
  i_inv14 : LEMMA I IMPLIES inv14
  i_inv15 : LEMMA I IMPLIES inv15

  p_inv1  : LEMMA pi(inv1)
  p_inv2  : LEMMA pi(inv2)
  p_inv3  : LEMMA pi(inv3)
  p_inv4  : LEMMA pi(inv4)
  p_inv5  : LEMMA pi(inv5)
  p_inv6  : LEMMA pi(inv6)
  p_inv7  : LEMMA pi(inv7)
  p_inv8  : LEMMA pi(inv8)
  p_inv10 : LEMMA pi(inv10)
  p_inv11 : LEMMA pi(inv11)
  p_inv12 : LEMMA pi(inv12)
  p_inv13 : LEMMA pi(inv13)
  p_inv14 : LEMMA pi(inv14)
  p_inv15 : LEMMA pi(inv15)

  p_I : LEMMA pi(I)  

  inv : LEMMA invariant(init,next)(I)

END Garbage_Collector3_Inv




$$$impl3.prf
(|Garbage_Collector3|
 (IMPORTING1_TCC1 "" (LEMMA "roots_within") (("" (PROPAX) NIL)))
 (|Rule_colour_target_TCC1| "" (SUBTYPE-TCC) NIL)
 (|Rule_colour_root_TCC1| "" (LEMMA "roots_within") (("" (GRIND) NIL)))
 (|Rule_colour_son_TCC1| "" (SUBTYPE-TCC) NIL)
 (|Rule_colour_son_TCC2| "" (SUBTYPE-TCC) NIL)
 (|Rule_black_to_white_TCC1| "" (SUBTYPE-TCC) NIL)
 (|Rule_append_white_TCC1| "" (SUBTYPE-TCC) NIL))(|Garbage_Collector3_Inv|
                                                  (IMPORTING1_TCC1
                                                   ""
                                                   (LEMMA "roots_within")
                                                   (("" (PROPAX) NIL)))
                                                  (|inv1_TCC1|
                                                   ""
                                                   (SUBTYPE-TCC)
                                                   NIL)
                                                  (|inv4_TCC1|
                                                   ""
                                                   (SUBTYPE-TCC)
                                                   NIL)
                                                  (|inv6_TCC1|
                                                   ""
                                                   (SUBTYPE-TCC)
                                                   NIL)
                                                  (|c_inv9|
                                                   ""
                                                   (EXPAND "IMPLIES")
                                                   ((""
                                                     (SKOLEM!)
                                                     ((""
                                                       (EXPAND "inv11")
                                                       ((""
                                                         (EXPAND "inv9")
                                                         ((""
                                                           (FLATTEN)
                                                           ((""
                                                             (FORWARD-CHAIN
                                                              "exists_bw14")
                                                             ((""
                                                               (SKOLEM!)
                                                               ((""
                                                                 (GRIND NIL)
                                                                 NIL)))))))))))))))
                                                  (|i_inv1| "" (IMPLY) NIL)
                                                  (|i_inv2| "" (IMPLY) NIL)
                                                  (|i_inv3| "" (IMPLY) NIL)
                                                  (|i_inv4| "" (IMPLY) NIL)
                                                  (|i_inv5| "" (IMPLY) NIL)
                                                  (|i_inv6| "" (IMPLY) NIL)
                                                  (|i_inv7| "" (IMPLY) NIL)
                                                  (|i_inv8| "" (IMPLY) NIL)
                                                  (|i_inv9|
                                                   ""
                                                   (LEMMA "c_inv9")
                                                   ((""
                                                     (EXPAND "IMPLIES")
                                                     ((""
                                                       (SKOLEM!)
                                                       ((""
                                                         (INST?)
                                                         ((""
                                                           (EXPAND "I")
                                                           ((""
                                                             (EXPAND "&")
                                                             ((""
                                                               (FLATTEN)
                                                               ((""
                                                                 (BDDSIMP)
                                                                 ((""
                                                                   (PROPAX)
                                                                   NIL)))))))))))))))))
                                                  (|i_inv10| "" (IMPLY) NIL)
                                                  (|i_inv11| "" (IMPLY) NIL)
                                                  (|i_inv12| "" (IMPLY) NIL)
                                                  (|i_inv13| "" (IMPLY) NIL)
                                                  (|i_inv14| "" (IMPLY) NIL)
                                                  (|i_inv15| "" (IMPLY) NIL)
                                                  (|p_inv1|
                                                   ""
                                                   (SUBGOALS
                                                    AUTO-REWRITE-INV-C)
                                                   (("1" (ACTION) NIL)
                                                    ("2"
                                                     (AUTO-REWRITE! "colour1")
                                                     (("2"
                                                       (LEMMA-ACTION)
                                                       NIL)))
                                                    ("3" (ACTION) NIL)
                                                    ("4" (ACTION) NIL)
                                                    ("5" (ACTION) NIL)
                                                    ("6" (ACTION) NIL)
                                                    ("7" (ACTION) NIL)
                                                    ("8" (ACTION) NIL)
                                                    ("9" (ACTION) NIL)
                                                    ("10"
                                                     (AUTO-REWRITE! "colour1")
                                                     (("10"
                                                       (LEMMA-ACTION)
                                                       NIL)))
                                                    ("11" (ACTION) NIL)
                                                    ("12" (ACTION) NIL)
                                                    ("13" (ACTION) NIL)
                                                    ("14" (ACTION) NIL)
                                                    ("15" (ACTION) NIL)
                                                    ("16" (ACTION) NIL)
                                                    ("17" (ACTION) NIL)
                                                    ("18" (ACTION) NIL)
                                                    ("19" (ACTION) NIL)
                                                    ("20" (ACTION) NIL)
                                                    ("21" (ACTION) NIL)))
                                                  (|p_inv2|
                                                   ""
                                                   (SUBGOALS
                                                    AUTO-REWRITE-INV-C)
                                                   (("1"
                                                     (LEMMA "i_inv3")
                                                     (("1"
                                                       (AUTO-REWRITE
                                                        "blackened7")
                                                       (("1"
                                                         (LEMMA "blackened8")
                                                         (("1"
                                                           (AUTO-REWRITE
                                                            "exists_bw1")
                                                           (("1"
                                                             (LEMMA-ACTION)
                                                             NIL)))))))))
                                                    ("2"
                                                     (LEMMA "i_inv3")
                                                     (("2"
                                                       (LEMMA "i_inv4")
                                                       (("2"
                                                         (AUTO-REWRITE
                                                          "blackened7")
                                                         (("2"
                                                           (LEMMA
                                                            "blackened8")
                                                           (("2"
                                                             (AUTO-REWRITE
                                                              "colour2")
                                                             (("2"
                                                               (LEMMA-ACTION)
                                                               NIL)))))))))))
                                                    ("3" (ACTION) NIL)
                                                    ("4" (ACTION) NIL)
                                                    ("5" (ACTION) NIL)
                                                    ("6" (ACTION) NIL)
                                                    ("7" (ACTION) NIL)
                                                    ("8" (ACTION) NIL)
                                                    ("9" (ACTION) NIL)
                                                    ("10" (ACTION) NIL)
                                                    ("11"
                                                     (LEMMA "i_inv5")
                                                     (("11"
                                                       (AUTO-REWRITE
                                                        "blacks1")
                                                       (("11"
                                                         (LEMMA-ACTION)
                                                         NIL)))))
                                                    ("12" (ACTION) NIL)
                                                    ("13" (ACTION) NIL)
                                                    ("14" (ACTION) NIL)
                                                    ("15" (ACTION) NIL)
                                                    ("16" (ACTION) NIL)
                                                    ("17" (ACTION) NIL)
                                                    ("18" (ACTION) NIL)
                                                    ("19" (ACTION) NIL)
                                                    ("20" (ACTION) NIL)
                                                    ("21" (ACTION) NIL)))
                                                  (|p_inv3|
                                                   ""
                                                   (SUBGOALS
                                                    AUTO-REWRITE-INV-C)
                                                   (("1"
                                                     (AUTO-REWRITE
                                                      "black_roots2")
                                                     (("1"
                                                       (LEMMA-ACTION)
                                                       NIL)))
                                                    ("2" (ACTION) NIL)
                                                    ("3"
                                                     (AUTO-REWRITE
                                                      "black_roots1")
                                                     (("3"
                                                       (LEMMA-ACTION)
                                                       NIL)))
                                                    ("4" (ACTION) NIL)
                                                    ("5"
                                                     (AUTO-REWRITE
                                                      "black_roots3")
                                                     (("5"
                                                       (LEMMA "roots_within")
                                                       (("5"
                                                         (LEMMA-ACTION)
                                                         NIL)))))
                                                    ("6" (ACTION) NIL)
                                                    ("7" (ACTION) NIL)
                                                    ("8" (ACTION) NIL)
                                                    ("9" (ACTION) NIL)
                                                    ("10" (ACTION) NIL)
                                                    ("11"
                                                     (AUTO-REWRITE
                                                      "black_roots1")
                                                     (("11"
                                                       (LEMMA-ACTION)
                                                       NIL)))
                                                    ("12" (ACTION) NIL)
                                                    ("13" (ACTION) NIL)
                                                    ("14" (ACTION) NIL)
                                                    ("15" (ACTION) NIL)
                                                    ("16" (ACTION) NIL)
                                                    ("17" (ACTION) NIL)
                                                    ("18"
                                                     (AUTO-REWRITE
                                                      "black_roots2")
                                                     (("18"
                                                       (LEMMA-ACTION)
                                                       NIL)))
                                                    ("19" (ACTION) NIL)
                                                    ("20" (ACTION) NIL)
                                                    ("21" (ACTION) NIL)
                                                    ("22" (ACTION) NIL)))
                                                  (|p_inv4|
                                                   ""
                                                   (SUBGOALS
                                                    AUTO-REWRITE-INV-C)
                                                   (("1"
                                                     (AUTO-REWRITE
                                                      "accessible2")
                                                     (("1"
                                                       (LEMMA-ACTION)
                                                       NIL)))
                                                    ("2" (ACTION) NIL)
                                                    ("3" (ACTION) NIL)
                                                    ("4" (ACTION) NIL)
                                                    ("5" (ACTION) NIL)
                                                    ("6" (ACTION) NIL)
                                                    ("7" (ACTION) NIL)
                                                    ("8" (ACTION) NIL)
                                                    ("9" (ACTION) NIL)
                                                    ("10" (ACTION) NIL)
                                                    ("11" (ACTION) NIL)
                                                    ("12" (ACTION) NIL)
                                                    ("13" (ACTION) NIL)
                                                    ("14" (ACTION) NIL)
                                                    ("15" (ACTION) NIL)
                                                    ("16" (ACTION) NIL)
                                                    ("17" (ACTION) NIL)
                                                    ("18" (ACTION) NIL)
                                                    ("19" (ACTION) NIL)
                                                    ("20"
                                                     (LEMMA "i_inv6")
                                                     (("20"
                                                       (LEMMA-ACTION)
                                                       NIL)))
                                                    ("21" (ACTION) NIL)))
                                                  (|p_inv5|
                                                   ""
                                                   (SUBGOALS
                                                    AUTO-REWRITE-INV-C)
                                                   (("1"
                                                     (LEMMA "i_inv3")
                                                     (("1"
                                                       (AUTO-REWRITE
                                                        "blackened7")
                                                       (("1"
                                                         (LEMMA "blackened8")
                                                         (("1"
                                                           (AUTO-REWRITE
                                                            "exists_bw1")
                                                           (("1"
                                                             (LEMMA-ACTION)
                                                             NIL)))))))))
                                                    ("2"
                                                     (LEMMA "i_inv3")
                                                     (("2"
                                                       (LEMMA "i_inv4")
                                                       (("2"
                                                         (LEMMA "i_inv8")
                                                         (("2"
                                                           (AUTO-REWRITE
                                                            "blackened7")
                                                           (("2"
                                                             (AUTO-REWRITE
                                                              "colour2")
                                                             (("2"
                                                               (LEMMA
                                                                "blackened8")
                                                               (("2"
                                                                 (LEMMA
                                                                  "blacks2")
                                                                 (("2"
                                                                   (LEMMA-ACTION)
                                                                   NIL)))))))))))))))
                                                    ("3" (ACTION) NIL)
                                                    ("4" (ACTION) NIL)
                                                    ("5"
                                                     (LEMMA "i_inv7")
                                                     (("5"
                                                       (AUTO-REWRITE
                                                        "exists_bw2")
                                                       (("5"
                                                         (AUTO-REWRITE
                                                          "exists_bw3")
                                                         (("5"
                                                           (LEMMA-ACTION)
                                                           NIL)))))))
                                                    ("6" (ACTION) NIL)
                                                    ("7" (ACTION) NIL)
                                                    ("8" (ACTION) NIL)
                                                    ("9" (ACTION) NIL)
                                                    ("10" (ACTION) NIL)
                                                    ("11" (ACTION) NIL)
                                                    ("12" (ACTION) NIL)
                                                    ("13"
                                                     (AUTO-REWRITE "blacks3")
                                                     (("13"
                                                       (LEMMA-ACTION)
                                                       NIL)))
                                                    ("14"
                                                     (AUTO-REWRITE "blacks4")
                                                     (("14"
                                                       (LEMMA-ACTION)
                                                       NIL)))
                                                    ("15" (ACTION) NIL)
                                                    ("16" (ACTION) NIL)
                                                    ("17" (ACTION) NIL)
                                                    ("18" (ACTION) NIL)
                                                    ("19" (ACTION) NIL)
                                                    ("20" (ACTION) NIL)
                                                    ("21" (ACTION) NIL)))
                                                  (|p_inv6|
                                                   ""
                                                   (SUBGOALS
                                                    AUTO-REWRITE-INV-C)
                                                   (("1"
                                                     (LEMMA "accessible1")
                                                     (("1"
                                                       (LEMMA-ACTION)
                                                       NIL)))
                                                    ("2"
                                                     (LEMMA "colour1")
                                                     (("2"
                                                       (LEMMA-ACTION)
                                                       NIL)))
                                                    ("3" (ACTION) NIL)
                                                    ("4" (ACTION) NIL)
                                                    ("5" (ACTION) NIL)
                                                    ("6" (ACTION) NIL)
                                                    ("7" (ACTION) NIL)
                                                    ("8" (ACTION) NIL)
                                                    ("9" (ACTION) NIL)
                                                    ("10" (ACTION) NIL)
                                                    ("11" (ACTION) NIL)
                                                    ("12" (ACTION) NIL)
                                                    ("13" (ACTION) NIL)
                                                    ("14" (ACTION) NIL)
                                                    ("15" (ACTION) NIL)
                                                    ("16" (ACTION) NIL)
                                                    ("17" (ACTION) NIL)
                                                    ("18"
                                                     (LEMMA "i_inv13")
                                                     (("18"
                                                       (LEMMA "blackened1")
                                                       (("18"
                                                         (LEMMA-ACTION)
                                                         NIL)))))
                                                    ("19" (ACTION) NIL)
                                                    ("20" (ACTION) NIL)
                                                    ("21" (ACTION) NIL)))
                                                  (|p_inv7|
                                                   ""
                                                   (SUBGOALS
                                                    AUTO-REWRITE-INV-C)
                                                   (("1"
                                                     (SKOLEM!)
                                                     (("1"
                                                       (EXPAND "Rule_mutate")
                                                       (("1"
                                                         (LIFT-IF -1)
                                                         (("1"
                                                           (SPLIT -1)
                                                           (("1"
                                                             (FLATTEN)
                                                             (("1"
                                                               (EXPAND "inv7")
                                                               (("1"
                                                                 (FLATTEN)
                                                                 (("1"
                                                                   (CASE
                                                                    "((CHI(s1!1) = TEST_I
            OR CHI(s1!1) = TEST_COLOUR OR CHI(s1!1) = COLOUR_SONS)
           AND OBC(s1!1) = blacks(0, NODES)(C(s1!1))
             AND
           exists_bw(0, 0, I(s1!1),
                     IF CHI(s1!1) = COLOUR_SONS THEN J(s1!1)
                     ELSE 0
                     ENDIF)(C(s1!1),
                            M(s1!1)))")
                                                                   (("1"
                                                                     (FLATTEN)
                                                                     (("1"
                                                                       (LEMMA
                                                                        "i_inv9")
                                                                       (("1"
                                                                         (EXPAND
                                                                          "inv9")
                                                                         (("1"
                                                                           (LEMMA-ACTION)
                                                                           NIL)))))))
                                                                    ("2"
                                                                     (REPLACE*)
                                                                     (("2"
                                                                       (ASSERT)
                                                                       (("2"
                                                                         (DELETE

                                                                          -3)
                                                                         (("2"
                                                                           (SPLIT
                                                                            1)
                                                                           (("1"
                                                                             (PROPAX)
                                                                             NIL)
                                                                            ("2"
                                                                             (LEMMA
                                                                              "exists_bw4")
                                                                             (("2"
                                                                               (INST?)
                                                                               (("2"
                                                                                 (BDDSIMP
                                                                                  (-1
                                                                                   -7
                                                                                   1))
                                                                                 (("1"
                                                                                   (LEMMA
                                                                                    "i_inv3")
                                                                                   (("1"
                                                                                     (EXPAND
                                                                                      "IMPLIES")
                                                                                     (("1"
                                                                                       (INST?)
                                                                                       (("1"
                                                                                         (BDDSIMP
                                                                                          (-1
                                                                                           -6))
                                                                                         (("1"
                                                                                           (EXPAND
                                                                                            "inv3")
                                                                                           (("1"
                                                                                             (CASE
                                                                                              "black_roots(ROOTS)(C(s1!1))")
                                                                                             (("1"
                                                                                               (LEMMA
                                                                                                "exists_bw5")
                                                                                               (("1"
                                                                                                 (INST?)
                                                                                                 (("1"
                                                                                                   (INST?)
                                                                                                   (("1"
                                                                                                     (HIDE
                                                                                                      -9)
                                                                                                     (("1"
                                                                                                       (CASE
                                                                                                        "exists_bw(0, 0, NODES, 0)(C(s1!1), M(s1!1))")
                                                                                                       (("1"
                                                                                                         (LEMMA
                                                                                                          "exists_bw6")
                                                                                                         (("1"
                                                                                                           (INST?
                                                                                                            :WHERE
                                                                                                            +)
                                                                                                           (("1"
                                                                                                             (AUTO-REWRITE
                                                                                                              "exists_bw7")
                                                                                                             (("1"
                                                                                                               (ASSERT)
                                                                                                               (("1"
                                                                                                                 (CASE
                                                                                                                  "exists_bw(I(s1!1),
                  IF CHI(s1!1) = COLOUR_SONS THEN J(s1!1) ELSE 0 ENDIF,
                  NODES, 0)(C(s1!1),
                            M(s1!1))")
                                                                                                                 (("1"
                                                                                                                   (LEMMA
                                                                                                                    "exists_bw7")
                                                                                                                   (("1"
                                                                                                                     (INST?)
                                                                                                                     (("1"
                                                                                                                       (GRIND
                                                                                                                        NIL)
                                                                                                                       NIL)))))
                                                                                                                  ("2"
                                                                                                                   (GRIND
                                                                                                                    NIL)
                                                                                                                   NIL)))))))))))
                                                                                                        ("2"
                                                                                                         (GRIND
                                                                                                          NIL)
                                                                                                         NIL)))))))))))
                                                                                              ("2"
                                                                                               (GRIND
                                                                                                NIL)
                                                                                               NIL)))))))))))))
                                                                                  ("2"
                                                                                   (PROPAX)
                                                                                   NIL)))))))))))))))))))))))
                                                            ("2"
                                                             (STOP-REWRITE
                                                              "inv7")
                                                             (("2"
                                                               (GRIND NIL)
                                                               NIL)))))))))))
                                                    ("2"
                                                     (EXPAND
                                                      "Rule_colour_target")
                                                     (("2"
                                                       (LIFT-IF -1)
                                                       (("2"
                                                         (BDDSIMP)
                                                         (("1"
                                                           (EXPAND "inv7")
                                                           (("1"
                                                             (LEMMA "i_inv10")
                                                             (("1"
                                                               (EXPAND
                                                                "IMPLIES")
                                                               (("1"
                                                                 (INST?)
                                                                 (("1"
                                                                   (BDDSIMP
                                                                    (-1 -5))
                                                                   (("1"
                                                                     (EXPAND
                                                                      "inv10")
                                                                     (("1"
                                                                       (AUTO-REWRITE
                                                                        "blacks2")
                                                                       (("1"
                                                                         (AUTO-REWRITE
                                                                          "blacks5")
                                                                         (("1"
                                                                           (AUTO-REWRITE
                                                                            "colour2")
                                                                           (("1"
                                                                             (FLATTEN)
                                                                             (("1"
                                                                               (CASE
                                                                                "colour(Q(s1!1))(C(s1!1))")
                                                                               (("1"
                                                                                 (CASE
                                                                                  "blacks(0, NODES)(C(s1!1)) = OBC(s1!1)")
                                                                                 (("1"
                                                                                   (LEMMA
                                                                                    "colour2")
                                                                                   (("1"
                                                                                     (INST?)
                                                                                     (("1"
                                                                                       (STOP-REWRITE
                                                                                        "colour2")
                                                                                       (("1"
                                                                                         (DELETE

                                                                                          -5
                                                                                          -11)
                                                                                         (("1"
                                                                                           (BDDSIMP
                                                                                            (-1
                                                                                             -3))
                                                                                           (("1"
                                                                                             (REPLACE*)
                                                                                             (("1"
                                                                                               (ASSERT)
                                                                                               (("1"
                                                                                                 (GRIND
                                                                                                  NIL)
                                                                                                 NIL)))))))))))))))
                                                                                  ("2"
                                                                                   (LEMMA
                                                                                    "blacks2")
                                                                                   (("2"
                                                                                     (INST?)
                                                                                     (("2"
                                                                                       (INST?)
                                                                                       (("2"
                                                                                         (STOP-REWRITE
                                                                                          "blacks5")
                                                                                         (("2"
                                                                                           (ASSERT)
                                                                                           NIL)))))))))))
                                                                                ("2"
                                                                                 (LEMMA
                                                                                  "blacks2")
                                                                                 (("2"
                                                                                   (INST?)
                                                                                   (("2"
                                                                                     (INST?)
                                                                                     (("2"
                                                                                       (STOP-REWRITE
                                                                                        "blacks5")
                                                                                       (("2"
                                                                                         (LEMMA
                                                                                          "blacks5")
                                                                                         (("2"
                                                                                           (INST?)
                                                                                           (("2"
                                                                                             (ASSERT)
                                                                                             (("2"
                                                                                               (GRIND
                                                                                                NIL)
                                                                                               NIL)))))))))))))))
                                                                                ("3"
                                                                                 (PROPAX)
                                                                                 NIL)))))))))))))))))))))))
                                                          ("2"
                                                           (STOP-REWRITE
                                                            "inv7")
                                                           (("2"
                                                             (ASSERT)
                                                             NIL)))
                                                          ("3"
                                                           (STOP-REWRITE
                                                            "inv7")
                                                           (("3"
                                                             (ASSERT)
                                                             NIL)))))))))
                                                    ("3"
                                                     (AUTO-REWRITE
                                                      "exists_bw3")
                                                     (("3"
                                                       (LEMMA-ACTION)
                                                       NIL)))
                                                    ("4" (ACTION) NIL)
                                                    ("5" (ACTION) NIL)
                                                    ("6" (ACTION) NIL)
                                                    ("7"
                                                     (LEMMA-ACTION)
                                                     (("1"
                                                       (LEMMA "exists_bw9")
                                                       (("1"
                                                         (INST? :WHERE -6)
                                                         (("1"
                                                           (BDDSIMP)
                                                           (("1"
                                                             (ASSERT)
                                                             NIL)))))))
                                                      ("2"
                                                       (LEMMA "exists_bw8")
                                                       (("2"
                                                         (INST?)
                                                         (("2"
                                                           (GRIND NIL)
                                                           NIL)))))))
                                                    ("8" (ACTION) NIL)
                                                    ("9"
                                                     (AUTO-REWRITE
                                                      "exists_bw10")
                                                     (("9"
                                                       (AUTO-REWRITE
                                                        "exists_bw11")
                                                       (("9"
                                                         (LEMMA-ACTION)
                                                         NIL)))))
                                                    ("10"
                                                     (EXPAND "inv7")
                                                     (("10"
                                                       (EXPAND
                                                        "Rule_colour_son")
                                                       (("10"
                                                         (LIFT-IF -1)
                                                         (("10"
                                                           (SPLIT -1)
                                                           (("1"
                                                             (FLATTEN)
                                                             (("1"
                                                               (CASE
                                                                "colour(son(I(s1!1), J(s1!1))(M(s1!1)))(C(s1!1))")
                                                               (("1"
                                                                 (LEMMA
                                                                  "colour2")
                                                                 (("1"
                                                                   (INST?)
                                                                   (("1"
                                                                     (BDDSIMP
                                                                      (-1 -2))
                                                                     (("1"
                                                                       (REPLACE*)
                                                                       (("1"
                                                                         (ASSERT)
                                                                         (("1"
                                                                           (LEMMA
                                                                            "exists_bw12")
                                                                           (("1"
                                                                             (INST?)
                                                                             (("1"
                                                                               (BDDSIMP)
                                                                               (("1"
                                                                                 (LEMMA
                                                                                  "exists_bw13")
                                                                                 (("1"
                                                                                   (INST?
                                                                                    :WHERE
                                                                                    -10)
                                                                                   (("1"
                                                                                     (BDDSIMP)
                                                                                     (("1"
                                                                                       (ASSERT)
                                                                                       NIL)))))))
                                                                                ("2"
                                                                                 (ASSERT)
                                                                                 NIL)))))))))))))))))
                                                                ("2"
                                                                 (LEMMA
                                                                  "i_inv10")
                                                                 (("2"
                                                                   (LEMMA
                                                                    "blacks2")
                                                                   (("2"
                                                                     (AUTO-REWRITE
                                                                      "blacks5")
                                                                     (("2"
                                                                       (EXPAND
                                                                        "inv10")
                                                                       (("2"
                                                                         (LEMMA-ACTION)
                                                                         NIL)))))))))
                                                                ("3"
                                                                 (PROPAX)
                                                                 NIL)
                                                                ("4"
                                                                 (PROPAX)
                                                                 NIL)))))
                                                            ("2"
                                                             (FLATTEN)
                                                             (("2"
                                                               (ASSERT)
                                                               (("2"
                                                                 (REPLACE*)
                                                                 (("2"
                                                                   (ASSERT)
                                                                   NIL)))))))))))))))
                                                    ("11" (ACTION) NIL)
                                                    ("12" (ACTION) NIL)
                                                    ("13" (ACTION) NIL)
                                                    ("14" (ACTION) NIL)
                                                    ("15" (ACTION) NIL)
                                                    ("16"
                                                     (AUTO-REWRITE
                                                      "exists_bw3")
                                                     (("16"
                                                       (LEMMA-ACTION)
                                                       NIL)))
                                                    ("17" (ACTION) NIL)
                                                    ("18" (ACTION) NIL)
                                                    ("19" (ACTION) NIL)
                                                    ("20" (ACTION) NIL)
                                                    ("21" (ACTION) NIL)))
                                                  (|p_inv8|
                                                   ""
                                                   (SUBGOALS
                                                    AUTO-REWRITE-INV-C)
                                                   (("1" (ACTION) NIL)
                                                    ("2"
                                                     (LEMMA "blacks2")
                                                     (("2"
                                                       (LEMMA-ACTION)
                                                       NIL)))
                                                    ("3" (ACTION) NIL)
                                                    ("4" (ACTION) NIL)
                                                    ("5"
                                                     (LEMMA "i_inv10")
                                                     (("5"
                                                       (LEMMA-ACTION)
                                                       NIL)))
                                                    ("6" (ACTION) NIL)
                                                    ("7" (ACTION) NIL)
                                                    ("8" (ACTION) NIL)
                                                    ("9" (ACTION) NIL)
                                                    ("10" (ACTION) NIL)
                                                    ("11" (ACTION) NIL)
                                                    ("12" (ACTION) NIL)
                                                    ("13"
                                                     (AUTO-REWRITE "blacks3")
                                                     (("13"
                                                       (LEMMA-ACTION)
                                                       NIL)))
                                                    ("14"
                                                     (AUTO-REWRITE "blacks4")
                                                     (("14"
                                                       (LEMMA-ACTION)
                                                       NIL)))
                                                    ("15" (ACTION) NIL)
                                                    ("16" (ACTION) NIL)
                                                    ("17" (ACTION) NIL)
                                                    ("18" (ACTION) NIL)
                                                    ("19" (ACTION) NIL)
                                                    ("20" (ACTION) NIL)
                                                    ("21" (ACTION) NIL)))
                                                  (|p_inv10|
                                                   ""
                                                   (SUBGOALS
                                                    AUTO-REWRITE-INV-C)
                                                   (("1" (ACTION) NIL)
                                                    ("2"
                                                     (LEMMA "blacks2")
                                                     (("2"
                                                       (LEMMA-ACTION)
                                                       NIL)))
                                                    ("3" (ACTION) NIL)
                                                    ("4"
                                                     (LEMMA-ACTION)
                                                     (("4"
                                                       (LEMMA "roots_within")
                                                       (("4"
                                                         (LEMMA "blacks2")
                                                         (("4"
                                                           (INST?)
                                                           (("1" (ASSERT) NIL)
                                                            ("2"
                                                             (ASSERT)
                                                             NIL)))))))))
                                                    ("5" (ACTION) NIL)
                                                    ("6" (ACTION) NIL)
                                                    ("7" (ACTION) NIL)
                                                    ("8" (ACTION) NIL)
                                                    ("9" (ACTION) NIL)
                                                    ("10"
                                                     (LEMMA "blacks2")
                                                     (("10"
                                                       (LEMMA-ACTION)
                                                       NIL)))
                                                    ("11" (ACTION) NIL)
                                                    ("12" (ACTION) NIL)
                                                    ("13" (ACTION) NIL)
                                                    ("14" (ACTION) NIL)
                                                    ("15" (ACTION) NIL)
                                                    ("16"
                                                     (LEMMA "i_inv14")
                                                     (("16"
                                                       (EXPAND "inv14")
                                                       (("16"
                                                         (LEMMA-ACTION)
                                                         NIL)))))
                                                    ("17" (ACTION) NIL)
                                                    ("18" (ACTION) NIL)
                                                    ("19" (ACTION) NIL)
                                                    ("20" (ACTION) NIL)
                                                    ("21" (ACTION) NIL)))
                                                  (|p_inv11|
                                                   ""
                                                   (SUBGOALS
                                                    AUTO-REWRITE-INV-C)
                                                   (("1"
                                                     (LEMMA "bw2")
                                                     (("1"
                                                       (LEMMA-ACTION)
                                                       NIL)))
                                                    ("2"
                                                     (LEMMA "bw3")
                                                     (("2"
                                                       (LEMMA "bw4")
                                                       (("2"
                                                         (LEMMA "blacks2")
                                                         (("2"
                                                           (LEMMA "i_inv10")
                                                           (("2"
                                                             (LEMMA "blacks5")
                                                             (("2"
                                                               (LEMMA
                                                                "colour2")
                                                               (("2"
                                                                 (EXPAND
                                                                  "IMPLIES")
                                                                 (("2"
                                                                   (ACTION)
                                                                   NIL)))))))))))))))
                                                    ("3"
                                                     (AUTO-REWRITE "smaller1")
                                                     (("3"
                                                       (LEMMA-ACTION)
                                                       NIL)))
                                                    ("4" (LEMMA-ACTION) NIL)
                                                    ("5" (LEMMA-ACTION) NIL)
                                                    ("6"
                                                     (EXPAND
                                                      "Rule_continue_propagating")
                                                     (("6"
                                                       (LIFT-IF)
                                                       (("6"
                                                         (SPLIT)
                                                         (("1"
                                                           (FLATTEN)
                                                           (("1"
                                                             (EXPAND "inv11")
                                                             (("1"
                                                               (SKOLEM!)
                                                               (("1"
                                                                 (INST?)
                                                                 (("1"
                                                                   (FLATTEN)
                                                                   (("1"
                                                                     (LEMMA-ACTION)
                                                                     NIL)))))))))))
                                                          ("2"
                                                           (FLATTEN)
                                                           (("2"
                                                             (STOP-REWRITE
                                                              "inv11")
                                                             (("2"
                                                               (REPLACE*)
                                                               NIL)))))))))))
                                                    ("7"
                                                     (EXPAND
                                                      "Rule_white_node")
                                                     (("7"
                                                       (LIFT-IF)
                                                       (("7"
                                                         (SPLIT)
                                                         (("1"
                                                           (FLATTEN)
                                                           (("1"
                                                             (EXPAND "inv11")
                                                             (("1"
                                                               (SKOLEM-TYPEPRED)
                                                               (("1"
                                                                 (FLATTEN)
                                                                 (("1"
                                                                   (INST?)
                                                                   (("1"
                                                                     (LEMMA
                                                                      "smaller2")
                                                                     (("1"
                                                                       (INST?
                                                                        :SUBST
                                                                        ("k"
                                                                         "I(s1!1)"))
                                                                       (("1"
                                                                         (REPLACE*)
                                                                         (("1"
                                                                           (ASSERT)
                                                                           (("1"
                                                                             (LEMMA
                                                                              "bw4")
                                                                             (("1"
                                                                               (INST?)
                                                                               (("1"
                                                                                 (LEMMA-ACTION)
                                                                                 NIL)))))))))
                                                                        ("2"
                                                                         (PROPAX)
                                                                         NIL)))))))))))))))
                                                          ("2"
                                                           (STOP-REWRITE
                                                            "inv11")
                                                           (("2"
                                                             (GRIND NIL)
                                                             NIL)))))))))
                                                    ("8"
                                                     (EXPAND
                                                      "Rule_black_node")
                                                     (("8"
                                                       (LIFT-IF)
                                                       (("8"
                                                         (SPLIT)
                                                         (("1"
                                                           (FLATTEN)
                                                           (("1"
                                                             (EXPAND "inv11")
                                                             (("1"
                                                               (SKOLEM-TYPEPRED)
                                                               (("1"
                                                                 (FLATTEN)
                                                                 (("1"
                                                                   (INST?)
                                                                   (("1"
                                                                     (REPLACE*)
                                                                     (("1"
                                                                       (ASSERT)
                                                                       (("1"
                                                                         (GRIND
                                                                          NIL)
                                                                         NIL)))))))))))))))
                                                          ("2"
                                                           (STOP-REWRITE
                                                            "inv11")
                                                           (("2"
                                                             (GRIND NIL)
                                                             NIL)))))))))
                                                    ("9"
                                                     (EXPAND
                                                      "Rule_stop_colouring_sons")
                                                     (("9"
                                                       (LIFT-IF)
                                                       (("9"
                                                         (SPLIT)
                                                         (("1"
                                                           (FLATTEN)
                                                           (("1"
                                                             (EXPAND "inv11")
                                                             (("1"
                                                               (SKOLEM-TYPEPRED)
                                                               (("1"
                                                                 (FLATTEN)
                                                                 (("1"
                                                                   (INST?)
                                                                   (("1"
                                                                     (REPLACE*)
                                                                     (("1"
                                                                       (ASSERT)
                                                                       (("1"
                                                                         (LEMMA
                                                                          "smaller3")
                                                                         (("1"
                                                                           (INST?)
                                                                           (("1"
                                                                             (GRIND
                                                                              NIL)
                                                                             NIL)
                                                                            ("2"
                                                                             (ASSERT)
                                                                             (("2"
                                                                               (LEMMA
                                                                                "i_inv12")
                                                                               (("2"
                                                                                 (EXPAND
                                                                                  "inv12")
                                                                                 (("2"
                                                                                   (EXPAND
                                                                                    "IMPLIES")
                                                                                   (("2"
                                                                                     (INST?)
                                                                                     (("2"
                                                                                       (GRIND
                                                                                        NIL)
                                                                                       NIL)))))))))))))))))))))))))))))
                                                          ("2"
                                                           (STOP-REWRITE
                                                            "inv11")
                                                           (("2"
                                                             (GRIND NIL)
                                                             NIL)))))))))
                                                    ("10"
                                                     (EXPAND
                                                      "Rule_colour_son")
                                                     (("10"
                                                       (LIFT-IF)
                                                       (("10"
                                                         (SPLIT)
                                                         (("1"
                                                           (FLATTEN)
                                                           (("1"
                                                             (EXPAND "inv11")
                                                             (("1"
                                                               (SKOLEM-TYPEPRED)
                                                               (("1"
                                                                 (FLATTEN)
                                                                 (("1"
                                                                   (INST
                                                                    -
                                                                    "n!1"
                                                                    "i!1")
                                                                   (("1"
                                                                     (SPLIT
                                                                      -8)
                                                                     (("1"
                                                                       (REPLACE*)
                                                                       (("1"
                                                                         (ASSERT)
                                                                         NIL)))
                                                                      ("2"
                                                                       (FLATTEN)
                                                                       (("2"
                                                                         (PROPAX)
                                                                         NIL)))
                                                                      ("3"
                                                                       (LEMMA
                                                                        "i_inv10")
                                                                       (("3"
                                                                         (LEMMA
                                                                          "blacks2")
                                                                         (("3"
                                                                           (LEMMA-ACTION)
                                                                           NIL)))))
                                                                      ("4"
                                                                       (REPLACE*)
                                                                       (("4"
                                                                         (ASSERT)
                                                                         (("4"
                                                                           (LEMMA
                                                                            "smaller4")
                                                                           (("4"
                                                                             (INST?
                                                                              :WHERE
                                                                              +)
                                                                             (("4"
                                                                               (LEMMA
                                                                                "bw4")
                                                                               (("4"
                                                                                 (AUTO-REWRITE
                                                                                  "colour1")
                                                                                 (("4"
                                                                                   (INST?
                                                                                    :WHERE
                                                                                    -13)
                                                                                   (("4"
                                                                                     (GRIND
                                                                                      NIL)
                                                                                     NIL)))))))))))))))
                                                                      ("5"
                                                                       (LEMMA
                                                                        "i_inv10")
                                                                       (("5"
                                                                         (LEMMA
                                                                          "blacks2")
                                                                         (("5"
                                                                           (INST?
                                                                            :SUBST
                                                                            ("cs"
                                                                             "C(s1!1)"))
                                                                           (("5"
                                                                             (INST?)
                                                                             (("5"
                                                                               (INST?)
                                                                               (("5"
                                                                                 (EXPAND
                                                                                  "IMPLIES")
                                                                                 (("5"
                                                                                   (INST?)
                                                                                   (("5"
                                                                                     (EXPAND
                                                                                      "inv10")
                                                                                     (("5"
                                                                                       (LEMMA
                                                                                        "bw3")
                                                                                       (("5"
                                                                                         (INST?
                                                                                          :WHERE
                                                                                          +)
                                                                                         (("5"
                                                                                           (INST?)
                                                                                           (("5"
                                                                                             (AUTO-REWRITE
                                                                                              "blacks5")
                                                                                             (("5"
                                                                                               (LEMMA-ACTION)
                                                                                               NIL)))))))))))))))))))))))))))))))))))))
                                                          ("2"
                                                           (STOP-REWRITE
                                                            "inv11")
                                                           (("2"
                                                             (GRIND NIL)
                                                             NIL)))))))))
                                                    ("11" (ACTION) NIL)
                                                    ("12" (ACTION) NIL)
                                                    ("13" (ACTION) NIL)
                                                    ("14" (ACTION) NIL)
                                                    ("15" (ACTION) NIL)
                                                    ("16"
                                                     (AUTO-REWRITE "smaller1")
                                                     (("16"
                                                       (LEMMA-ACTION)
                                                       NIL)))
                                                    ("17" (ACTION) NIL)
                                                    ("18" (ACTION) NIL)
                                                    ("19" (ACTION) NIL)
                                                    ("20" (ACTION) NIL)
                                                    ("21" (ACTION) NIL)))
                                                  (|p_inv12|
                                                   ""
                                                   (SUBGOALS
                                                    AUTO-REWRITE-INV-C)
                                                   (("1" (ACTION) NIL)
                                                    ("2" (ACTION) NIL)
                                                    ("3" (ACTION) NIL)
                                                    ("4" (ACTION) NIL)
                                                    ("5" (ACTION) NIL)
                                                    ("6" (ACTION) NIL)
                                                    ("7" (ACTION) NIL)
                                                    ("8" (ACTION) NIL)
                                                    ("9" (ACTION) NIL)
                                                    ("10" (ACTION) NIL)
                                                    ("11" (ACTION) NIL)
                                                    ("12" (ACTION) NIL)
                                                    ("13" (ACTION) NIL)
                                                    ("14" (ACTION) NIL)
                                                    ("15" (ACTION) NIL)
                                                    ("16" (ACTION) NIL)
                                                    ("17" (ACTION) NIL)
                                                    ("18" (ACTION) NIL)
                                                    ("19" (ACTION) NIL)
                                                    ("20" (ACTION) NIL)
                                                    ("21" (ACTION) NIL)))
                                                  (|p_inv13|
                                                   ""
                                                   (SUBGOALS
                                                    AUTO-REWRITE-INV-C)
                                                   (("1"
                                                     (AUTO-REWRITE
                                                      "blackened2")
                                                     (("1"
                                                       (LEMMA-ACTION)
                                                       NIL)))
                                                    ("2"
                                                     (AUTO-REWRITE
                                                      "blackened3")
                                                     (("2"
                                                       (LEMMA-ACTION)
                                                       NIL)))
                                                    ("3" (ACTION) NIL)
                                                    ("4" (ACTION) NIL)
                                                    ("5" (ACTION) NIL)
                                                    ("6" (ACTION) NIL)
                                                    ("7" (ACTION) NIL)
                                                    ("8" (ACTION) NIL)
                                                    ("9" (ACTION) NIL)
                                                    ("10" (ACTION) NIL)
                                                    ("11" (ACTION) NIL)
                                                    ("12" (ACTION) NIL)
                                                    ("13" (ACTION) NIL)
                                                    ("14" (ACTION) NIL)
                                                    ("15"
                                                     (LEMMA "i_inv2")
                                                     (("15"
                                                       (LEMMA "i_inv3")
                                                       (("15"
                                                         (AUTO-REWRITE
                                                          "blackened6")
                                                         (("15"
                                                           (AUTO-REWRITE
                                                            "blackened7")
                                                           (("15"
                                                             (LEMMA-ACTION)
                                                             NIL)))))))))
                                                    ("16" (ACTION) NIL)
                                                    ("17" (ACTION) NIL)
                                                    ("18" (ACTION) NIL)
                                                    ("19"
                                                     (AUTO-REWRITE
                                                      "blackened4")
                                                     (("19"
                                                       (LEMMA-ACTION)
                                                       NIL)))
                                                    ("20"
                                                     (LEMMA "i_inv6")
                                                     (("20"
                                                       (AUTO-REWRITE
                                                        "blackened5")
                                                       (("20"
                                                         (LEMMA-ACTION)
                                                         NIL)))))
                                                    ("21" (ACTION) NIL)))
                                                  (|p_inv14|
                                                   ""
                                                   (SUBGOALS
                                                    AUTO-REWRITE-INV-C)
                                                   (("1" (ACTION) NIL)
                                                    ("2"
                                                     (LEMMA "blacks2")
                                                     (("2"
                                                       (LEMMA-ACTION)
                                                       NIL)))
                                                    ("3" (ACTION) NIL)
                                                    ("4" (ACTION) NIL)
                                                    ("5" (ACTION) NIL)
                                                    ("6" (ACTION) NIL)
                                                    ("7" (ACTION) NIL)
                                                    ("8" (ACTION) NIL)
                                                    ("9" (ACTION) NIL)
                                                    ("10" (ACTION) NIL)
                                                    ("11"
                                                     (LEMMA "i_inv15")
                                                     (("11"
                                                       (AUTO-REWRITE "inv15")
                                                       (("11"
                                                         (LEMMA-ACTION)
                                                         NIL)))))
                                                    ("12" (ACTION) NIL)
                                                    ("13" (ACTION) NIL)
                                                    ("14" (ACTION) NIL)
                                                    ("15" (ACTION) NIL)
                                                    ("16" (ACTION) NIL)
                                                    ("17" (ACTION) NIL)
                                                    ("18" (ACTION) NIL)
                                                    ("19" (ACTION) NIL)
                                                    ("20" (ACTION) NIL)
                                                    ("21" (ACTION) NIL)))
                                                  (|p_inv15|
                                                   ""
                                                   (SUBGOALS
                                                    AUTO-REWRITE-INV-C)
                                                   (("1" (ACTION) NIL)
                                                    ("2"
                                                     (LEMMA "blacks2")
                                                     (("2"
                                                       (LEMMA-ACTION)
                                                       NIL)))
                                                    ("3" (ACTION) NIL)
                                                    ("4" (ACTION) NIL)
                                                    ("5" (ACTION) NIL)
                                                    ("6" (ACTION) NIL)
                                                    ("7" (ACTION) NIL)
                                                    ("8" (ACTION) NIL)
                                                    ("9" (ACTION) NIL)
                                                    ("10" (ACTION) NIL)
                                                    ("11" (ACTION) NIL)
                                                    ("12" (ACTION) NIL)
                                                    ("13"
                                                     (AUTO-REWRITE "blacks6")
                                                     (("13"
                                                       (LEMMA-ACTION)
                                                       NIL)))
                                                    ("14"
                                                     (AUTO-REWRITE "blacks7")
                                                     (("14"
                                                       (LEMMA-ACTION)
                                                       NIL)))
                                                    ("15" (ACTION) NIL)
                                                    ("16" (ACTION) NIL)
                                                    ("17" (ACTION) NIL)
                                                    ("18" (ACTION) NIL)
                                                    ("19" (ACTION) NIL)
                                                    ("20" (ACTION) NIL)
                                                    ("21" (ACTION) NIL)))
                                                  (|p_I|
                                                   ""
                                                   (LEMMA "p_inv1")
                                                   ((""
                                                     (LEMMA "p_inv2")
                                                     ((""
                                                       (LEMMA "p_inv3")
                                                       ((""
                                                         (LEMMA "p_inv4")
                                                         ((""
                                                           (LEMMA "p_inv5")
                                                           ((""
                                                             (LEMMA "p_inv6")
                                                             ((""
                                                               (LEMMA
                                                                "p_inv7")
                                                               ((""
                                                                 (LEMMA
                                                                  "p_inv8")
                                                                 ((""
                                                                   (LEMMA
                                                                    "p_inv10")
                                                                   ((""
                                                                     (LEMMA
                                                                      "p_inv11")
                                                                     ((""
                                                                       (LEMMA
                                                                        "p_inv12")
                                                                       ((""
                                                                         (LEMMA
                                                                          "p_inv13")
                                                                         ((""
                                                                           (LEMMA
                                                                            "p_inv14")
                                                                           ((""
                                                                             (LEMMA
                                                                              "p_inv15")
                                                                             ((""
                                                                               (LEMMA
                                                                                "roots_within")
                                                                               ((""
                                                                                 (PRES-ALL)
                                                                                 NIL)))))))))))))))))))))))))))))))
                                                  (|inv| "" (INV-ALL) NIL))

$$$refine3.pvs

Refinement3[
  NODES : posnat, 
  SONS  : posnat, 
  ROOTS : posnat] : THEORY

BEGIN

  ASSUMING
    roots_within : ASSUMPTION ROOTS <= NODES
  ENDASSUMING

  I2 : THEORY = Garbage_Collector2[NODES,SONS,ROOTS]
  I3 : THEORY = Garbage_Collector3[NODES,SONS,ROOTS]
  IMPORTING Garbage_Collector3_Inv[NODES,SONS,ROOTS]

  s     : VAR I3.State
  r1,r2 : VAR (I)
  n,k   : VAR Node
  i     : VAR Index
  cs    : VAR Colours

  abs(s):I2.State = 
    (# MU := CASES MU(s) OF
               MUTATE : MUTATE,
               COLOUR : COLOUR
             ENDCASES,
       CHI := CASES CHI(s) OF
                COLOUR_ROOTS : COLOUR_ROOTS,
                      TEST_I : PROPAGATE,
                 TEST_COLOUR : PROPAGATE,
                 COLOUR_SONS : PROPAGATE,
                      TEST_H : PROPAGATE, 
                       COUNT : PROPAGATE,
                     COMPARE : PROPAGATE,
                      TEST_L : TEST_L,
                      APPEND : APPEND
              ENDCASES,
       Q := Q(s),
       K := K(s),
       L := L(s),
       C := C(s),
       M := M(s)
     #)

  sim_mutate : LEMMA
    (EXISTS n,i,k: r2 = Rule_mutate(n,i,k)(r1)) IMPLIES
      EXISTS n,i,k: abs(r2) = Rule_mutate(n,i,k)(abs(r1))

  sim_colour_target : LEMMA
    r2 = Rule_colour_target(r1) IMPLIES
      abs(r2) = Rule_colour_target(abs(r1))

  sim_stop_colouring_roots : LEMMA
    r2 = Rule_stop_colouring_roots(r1) IMPLIES
      abs(r2) = Rule_stop_colouring_roots(abs(r1))

  sim_colour_root : LEMMA
    r2 = Rule_colour_root(r1) IMPLIES
      abs(r2) = Rule_colour_root(abs(r1))

  sim_stop_propagating : LEMMA
    r2 = Rule_stop_propagating(r1) IMPLIES
      abs(r2) = abs(r1)

  sim_continue_propagating : LEMMA
    r2 = Rule_continue_propagating(r1) IMPLIES
      abs(r2) = abs(r1)

  sim_white_node : LEMMA
    r2 = Rule_white_node(r1) IMPLIES
      abs(r2) = abs(r1)

  sim_black_node : LEMMA
    r2 = Rule_black_node(r1) IMPLIES
      abs(r2) = abs(r1)
  
  sim_stop_colouring_sons : LEMMA
    r2 = Rule_stop_colouring_sons(r1) IMPLIES
      abs(r2) = abs(r1)

  sim_colour_son : LEMMA
    r2 = Rule_colour_son(r1) IMPLIES
      (EXISTS n,i: abs(r2) = Rule_propagate(n,i)(abs(r1))) OR
      abs(r2) = abs(r1)

  sim_stop_counting : LEMMA
    r2 = Rule_stop_counting(r1) IMPLIES
      abs(r2) = abs(r1)

  sim_continue_counting : LEMMA
    r2 = Rule_continue_counting(r1) IMPLIES
      abs(r2) = abs(r1)

  sim_skip_white : LEMMA
    r2 = Rule_skip_white(r1) IMPLIES
      abs(r2) = abs(r1)

  sim_count_black : LEMMA
    r2 = Rule_count_black(r1) IMPLIES
      abs(r2) = abs(r1)

  sim_stop_colouring : LEMMA
    r2 = Rule_stop_colouring(r1) IMPLIES
      abs(r2) = Rule_stop_propagating(abs(r1)) OR
      abs(r2) = abs(r1)

  sim_continue_colouring : LEMMA
    r2 = Rule_continue_colouring(r1) IMPLIES
      abs(r2) = abs(r1)

  sim_stop_appending : LEMMA
    r2 = Rule_stop_appending(r1) IMPLIES
      abs(r2) = Rule_stop_appending(abs(r1))

  sim_continue_appending : LEMMA
    r2 = Rule_continue_appending(r1) IMPLIES
      abs(r2) = Rule_continue_appending(abs(r1))

  sim_black_to_white : LEMMA
    r2 = Rule_black_to_white(r1) IMPLIES
      abs(r2) = Rule_black_to_white(abs(r1))

  sim_append_white : LEMMA
    r2 = Rule_append_white(r1) IMPLIES
      abs(r2) = Rule_append_white(abs(r1))

  next_h : LEMMA
    next(r1,r2) IMPLIES next(abs(r1),abs(r2))

  R3 : THEORY = 
    Refinement[I2.O_State,
      I2.State,I2.init,I2.next,I2.proj,
      I3.State,I3.init,I3.next,I3.proj,
      abs,I]      

END Refinement3


$$$refine3.prf
(|Refinement3| (I2_TCC1 "" (LEMMA "roots_within") (("" (PROPAX) NIL)))
 (|sim_mutate| "" (SIMULATE-INIT AUTO-REWRITE-REF-C) (("" (SIMULATE) NIL)))
 (|sim_colour_target| "" (SIMULATE-INIT AUTO-REWRITE-REF-C)
  (("" (SIMULATE) NIL)))
 (|sim_stop_colouring_roots| "" (SIMULATE-INIT AUTO-REWRITE-REF-C)
  (("" (SIMULATE) NIL)))
 (|sim_colour_root| "" (SIMULATE-INIT AUTO-REWRITE-REF-C)
  (("" (SIMULATE) NIL)))
 (|sim_stop_propagating| "" (SIMULATE-INIT AUTO-REWRITE-REF-C)
  (("" (SIMULATE) NIL)))
 (|sim_continue_propagating| "" (SIMULATE-INIT AUTO-REWRITE-REF-C)
  (("" (SIMULATE) NIL)))
 (|sim_white_node| "" (SIMULATE-INIT AUTO-REWRITE-REF-C)
  (("" (SIMULATE) NIL)))
 (|sim_black_node| "" (SIMULATE-INIT AUTO-REWRITE-REF-C)
  (("" (SIMULATE) NIL)))
 (|sim_stop_colouring_sons| "" (SIMULATE-INIT AUTO-REWRITE-REF-C)
  (("" (SIMULATE) NIL)))
 (|sim_colour_son| "" (SIMULATE-INIT AUTO-REWRITE-REF-C)
  (("" (LEMMA "i_inv1")
    (("" (AUTO-REWRITE "bw1")
      (("" (AUTO-REWRITE "colour2") (("" (LEMMA-SIMULATE) NIL)))))))))
 (|sim_stop_counting| "" (SIMULATE-INIT AUTO-REWRITE-REF-C)
  (("" (SIMULATE) NIL)))
 (|sim_continue_counting| "" (SIMULATE-INIT AUTO-REWRITE-REF-C)
  (("" (SIMULATE) NIL)))
 (|sim_skip_white| "" (SIMULATE-INIT AUTO-REWRITE-REF-C)
  (("" (SIMULATE) NIL)))
 (|sim_count_black| "" (SIMULATE-INIT AUTO-REWRITE-REF-C)
  (("" (SIMULATE) NIL)))
 (|sim_stop_colouring| "" (SIMULATE-INIT AUTO-REWRITE-REF-C)
  (("" (LEMMA "i_inv2") (("" (LEMMA-SIMULATE) NIL)))))
 (|sim_continue_colouring| "" (SIMULATE-INIT AUTO-REWRITE-REF-C)
  (("" (SIMULATE) NIL)))
 (|sim_stop_appending| "" (SIMULATE-INIT AUTO-REWRITE-REF-C)
  (("" (SIMULATE) NIL)))
 (|sim_continue_appending| "" (SIMULATE-INIT AUTO-REWRITE-REF-C)
  (("" (SIMULATE) NIL)))
 (|sim_black_to_white| "" (SIMULATE-INIT AUTO-REWRITE-REF-C)
  (("" (SIMULATE) NIL)))
 (|sim_append_white| "" (SIMULATE-INIT AUTO-REWRITE-REF-C)
  (("" (SIMULATE) NIL)))
 (|next_h| "" (BEGIN-NEXT)
  (("1" (LEMMA "sim_mutate") (("1" (END-NEXT) NIL)))
   ("2" (LEMMA "sim_colour_target") (("2" (END-NEXT) NIL)))
   ("3" (LEMMA "sim_stop_colouring_roots") (("3" (END-NEXT) NIL)))
   ("4" (LEMMA "sim_colour_root") (("4" (END-NEXT) NIL)))
   ("5" (LEMMA "sim_stop_propagating") (("5" (END-NEXT) NIL)))
   ("6" (LEMMA "sim_continue_propagating") (("6" (END-NEXT) NIL)))
   ("7" (LEMMA "sim_white_node") (("7" (END-NEXT) NIL)))
   ("8" (LEMMA "sim_black_node") (("8" (END-NEXT) NIL)))
   ("9" (LEMMA "sim_stop_colouring_sons") (("9" (END-NEXT) NIL)))
   ("10" (LEMMA "sim_colour_son") (("10" (END-NEXT) NIL)))
   ("11" (LEMMA "sim_stop_counting") (("11" (END-NEXT) NIL)))
   ("12" (LEMMA "sim_continue_counting") (("12" (END-NEXT) NIL)))
   ("13" (LEMMA "sim_skip_white") (("13" (END-NEXT) NIL)))
   ("14" (LEMMA "sim_count_black") (("14" (END-NEXT) NIL)))
   ("15" (LEMMA "sim_stop_colouring") (("15" (END-NEXT) NIL)))
   ("16" (LEMMA "sim_continue_colouring") (("16" (END-NEXT) NIL)))
   ("17" (LEMMA "sim_stop_appending") (("17" (END-NEXT) NIL)))
   ("18" (LEMMA "sim_continue_appending") (("18" (END-NEXT) NIL)))
   ("19" (LEMMA "sim_black_to_white") (("19" (END-NEXT) NIL)))
   ("20" (LEMMA "sim_append_white") (("20" (END-NEXT) NIL)))
   ("21" (ASSERT) NIL)))
 (R3_TCC1 "" (SKOSIMP*)
  (("" (EXPAND "proj") (("" (EXPAND "abs") (("" (PROPAX) NIL)))))))
 (R3_TCC2 "" (SKOSIMP*)
  (("" (EXPAND "init")
    (("" (EXPAND "abs") (("" (FLATTEN) (("" (ASSERT) NIL)))))))))
 (R3_TCC3 "" (LEMMA "next_h") (("" (PROPAX) NIL)))
 (R3_TCC4 "" (LEMMA "inv") (("" (PROPAX) NIL))))

$$$impl2.pvs

Garbage_Collector2[
  NODES : posnat, 
  SONS  : posnat, 
  ROOTS : posnat] : THEORY

BEGIN

  ASSUMING
    roots_within : ASSUMPTION ROOTS <= NODES
  ENDASSUMING

  IMPORTING Coloured_Memory[NODES,SONS,ROOTS]

  MuPC    : TYPE = {MUTATE,COLOUR}  
  CoPC    : TYPE = {COLOUR_ROOTS,PROPAGATE,TEST_L,APPEND}

  State   : TYPE = [# MU : MuPC, CHI : CoPC, 
                      Q : nat, K : nat, L : nat, C : Colours, M : Memory #]

  O_State : TYPE = Memory

  s,s1,s2 : VAR State
  n,k     : VAR Node
  i       : VAR Index

  proj(s):O_State = M(s)

  init(s):bool = 
      MU(s) = MUTATE
    & CHI(s) = COLOUR_ROOTS
    & K(s) = 0 
    & M(s) = null_array

  %%%%%%%%%%%%%%%%%%%%%%%
  % The MUTATOR Process %
  %%%%%%%%%%%%%%%%%%%%%%%

  Rule_mutate(n,i,k)(s):State =
    IF MU(s) = MUTATE AND accessible(k)(M(s)) THEN 
      s WITH [M := set_son(n,i,k)(M(s)),
              Q := k,
              MU := COLOUR]
    ELSE 
      s
    ENDIF

  Rule_colour_target(s):State =
    IF MU(s) = COLOUR AND Q(s) < NODES THEN 
      s WITH [C := set_colour(Q(s),TRUE)(C(s)),
              MU := MUTATE]
    ELSE 
      s
    ENDIF

  MUTATOR(s1,s2):bool =
       (EXISTS n,i,k: s2 = Rule_mutate(n,i,k)(s1))
    OR s2 = Rule_colour_target(s1)


  %%%%%%%%%%%%%%%%%%%%%%%%%
  % The COLLECTOR Process %
  %%%%%%%%%%%%%%%%%%%%%%%%%

  Rule_stop_colouring_roots(s):State =
    IF CHI(s) = COLOUR_ROOTS AND K(s) = ROOTS THEN
      s WITH [CHI := PROPAGATE]
    ELSE
      s
    ENDIF

  Rule_colour_root(s):State =
    IF CHI(s) = COLOUR_ROOTS AND K(s) < ROOTS THEN
      s WITH [C := set_colour(K(s),TRUE)(C(s)),
              K := K(s) + 1]
    ELSE
      s
    ENDIF

  Rule_stop_propagating(s):State =
    IF CHI(s) = PROPAGATE AND NOT exists_bw(C(s),M(s)) THEN 
      s WITH [L := 0, CHI := TEST_L]
    ELSE
      s
    ENDIF

  Rule_propagate(n,i)(s):State =
    IF CHI(s) = PROPAGATE AND bw(n,i)(C(s),M(s)) THEN
      s WITH [C := set_colour(son(n,i)(M(s)),TRUE)(C(s))]
    ELSE
      s
    ENDIF

  Rule_stop_appending(s):State =
    IF CHI(s) = TEST_L AND L(s) = NODES THEN
      s WITH [K := 0, CHI := COLOUR_ROOTS]
    ELSE
      s
    ENDIF

  Rule_continue_appending(s):State =
    IF CHI(s) = TEST_L AND L(s) < NODES THEN
      s WITH [CHI := APPEND]
    ELSE 
      s 
    ENDIF

  Rule_black_to_white(s):State =
    IF CHI(s) = APPEND AND L(s) < NODES AND colour(L(s))(C(s)) THEN
      s WITH [C := set_colour(L(s),FALSE)(C(s)),
              L := L(s)+1,
              CHI := TEST_L]
    ELSE 
      s 
    ENDIF

  Rule_append_white(s):State =
    IF CHI(s) = APPEND AND L(s) < NODES AND NOT colour(L(s))(C(s)) THEN
      s WITH [M := append_to_free(L(s))(M(s)),
              L := L(s) + 1,
              CHI := TEST_L]
    ELSE 
      s 
    ENDIF

  COLLECTOR(s1,s2):bool =
       s2 = Rule_stop_colouring_roots(s1)
    OR s2 = Rule_colour_root(s1)
    OR s2 = Rule_stop_propagating(s1)
    OR (EXISTS n,i: s2 = Rule_propagate(n,i)(s1))
    OR s2 = Rule_stop_appending(s1) 
    OR s2 = Rule_continue_appending(s1) 
    OR s2 = Rule_black_to_white(s1) 
    OR s2 = Rule_append_white(s1)

  %%%%%%%%%%%%%%%%%%%%%%%%%%%
  % The Transition Relation %
  %%%%%%%%%%%%%%%%%%%%%%%%%%%

  next(s1,s2):bool =
    MUTATOR(s1,s2) OR
    COLLECTOR(s1,s2) OR
    s2 = s1

END Garbage_Collector2


Garbage_Collector2_Inv[
  NODES : posnat, 
  SONS  : posnat, 
  ROOTS : posnat] : THEORY

BEGIN

  ASSUMING
    roots_within : ASSUMPTION ROOTS <= NODES
  ENDASSUMING

  IMPORTING Memory_Properties[NODES,SONS,ROOTS]
  IMPORTING Garbage_Collector2[NODES,SONS,ROOTS]
  IMPORTING Invariant_Predicates[State]

  s : VAR State

  inv1(s):bool =
    CHI(s)=PROPAGATE IMPLIES black_roots(ROOTS)(C(s))

  inv2(s):bool =
    CHI(s)=COLOUR_ROOTS IMPLIES black_roots(K(s))(C(s))

  I : pred[State] = inv1 & inv2

  pi : pred[pred[State]] = preserved(init,next)(I)

  i_inv1 : LEMMA I IMPLIES inv1
  i_inv2 : LEMMA I IMPLIES inv2

  p_inv1 : LEMMA pi(inv1)
  p_inv2 : LEMMA pi(inv2)

  p_I : LEMMA pi(I)

  inv : LEMMA invariant(init,next)(I)

END Garbage_Collector2_Inv




$$$impl2.prf
(|Garbage_Collector2|
 (IMPORTING1_TCC1 "" (LEMMA "roots_within") (("" (PROPAX) NIL)))
 (|Rule_colour_target_TCC1| "" (SUBTYPE-TCC) NIL)
 (|Rule_colour_root_TCC1| "" (LEMMA "roots_within") (("" (GRIND) NIL)))
 (|Rule_black_to_white_TCC1| "" (SUBTYPE-TCC) NIL)
 (|Rule_append_white_TCC1| "" (SUBTYPE-TCC) NIL))(|Garbage_Collector2_Inv|
                                                  (IMPORTING1_TCC1
                                                   ""
                                                   (LEMMA "roots_within")
                                                   (("" (PROPAX) NIL)))
                                                  (|i_inv1| "" (IMPLY) NIL)
                                                  (|i_inv2| "" (IMPLY) NIL)
                                                  (|p_inv1|
                                                   ""
                                                   (SUBGOALS
                                                    AUTO-REWRITE-INV-B)
                                                   (("1" (ACTION) NIL)
                                                    ("2"
                                                     (AUTO-REWRITE
                                                      "black_roots1")
                                                     (("2"
                                                       (LEMMA-ACTION)
                                                       NIL)))
                                                    ("3"
                                                     (LEMMA "i_inv2")
                                                     (("3"
                                                       (LEMMA-ACTION)
                                                       NIL)))
                                                    ("4" (ACTION) NIL)
                                                    ("5" (ACTION) NIL)
                                                    ("6"
                                                     (AUTO-REWRITE
                                                      "black_roots1")
                                                     (("6"
                                                       (LEMMA-ACTION)
                                                       NIL)))
                                                    ("7" (ACTION) NIL)
                                                    ("8" (ACTION) NIL)
                                                    ("9" (ACTION) NIL)
                                                    ("10" (ACTION) NIL)
                                                    ("11" (ACTION) NIL)))
                                                  (|p_inv2|
                                                   ""
                                                   (AUTO-REWRITE
                                                    "black_roots2")
                                                   ((""
                                                     (SUBGOALS
                                                      AUTO-REWRITE-INV-B)
                                                     (("1" (ACTION) NIL)
                                                      ("2"
                                                       (AUTO-REWRITE
                                                        "black_roots1")
                                                       (("2"
                                                         (LEMMA-ACTION)
                                                         NIL)))
                                                      ("3" (ACTION) NIL)
                                                      ("4"
                                                       (AUTO-REWRITE
                                                        "black_roots3")
                                                       (("4"
                                                         (LEMMA
                                                          "roots_within")
                                                         (("4"
                                                           (LEMMA-ACTION)
                                                           NIL)))))
                                                      ("5" (ACTION) NIL)
                                                      ("6" (ACTION) NIL)
                                                      ("7" (ACTION) NIL)
                                                      ("8" (ACTION) NIL)
                                                      ("9" (ACTION) NIL)
                                                      ("10" (ACTION) NIL)
                                                      ("11" (ACTION) NIL)))))
                                                  (|p_I|
                                                   ""
                                                   (LEMMA "p_inv1")
                                                   ((""
                                                     (LEMMA "p_inv2")
                                                     (("" (PRES-ALL) NIL)))))
                                                  (|inv| "" (INV-ALL) NIL))
$$$refine2.pvs

Refinement2[
  NODES : posnat, 
  SONS  : posnat, 
  ROOTS : posnat] : THEORY

BEGIN

  ASSUMING
    roots_within : ASSUMPTION ROOTS <= NODES
  ENDASSUMING

  I1 : THEORY = Garbage_Collector1[NODES,SONS,ROOTS]
  I2 : THEORY = Garbage_Collector2[NODES,SONS,ROOTS]
  IMPORTING Garbage_Collector2_Inv[NODES,SONS,ROOTS]

  s     : VAR I2.State
  r1,r2 : VAR (I)
  n,k   : VAR Node
  i     : VAR Index
  cs    : VAR Colours

  abs(s):I1.State = 
    (# MU := CASES MU(s) OF
               MUTATE : MUTATE,
               COLOUR : COLOUR
             ENDCASES,
       CHI := CASES CHI(s) OF
                COLOUR_ROOTS : COLOUR,
                   PROPAGATE : COLOUR,
                      TEST_L : TEST_L,
                      APPEND : APPEND
              ENDCASES,
       Q   := Q(s),
       L   := L(s),
       C   := C(s),
       M   := M(s)
     #)

  sim_mutate : LEMMA
    (EXISTS n,i,k: r2 = Rule_mutate(n,i,k)(r1)) IMPLIES
      EXISTS n,i,k: abs(r2) = Rule_mutate(n,i,k)(abs(r1))

  sim_colour_target : LEMMA
    r2 = Rule_colour_target(r1) IMPLIES
      abs(r2) = Rule_colour_target(abs(r1))

  sim_stop_colouring_roots : LEMMA
    r2 = Rule_stop_colouring_roots(r1) IMPLIES
      abs(r2) = abs(r1)

  sim_colour_root : LEMMA
    r2 = Rule_colour_root(r1) IMPLIES
      (EXISTS n: abs(r2) = Rule_colour(n)(abs(r1))) OR abs(r2) = abs(r1)

  sim_stop_propagating : LEMMA
    r2 = Rule_stop_propagating(r1) IMPLIES
      abs(r2) = Rule_stop_colouring(abs(r1)) OR abs(r2) = abs(r1)

  sim_propagate : LEMMA
    (EXISTS n,i: r2 = Rule_propagate(n,i)(r1)) IMPLIES
      (EXISTS k: abs(r2) = Rule_colour(k)(abs(r1))) OR
      abs(r2) = abs(r1)

  sim_stop_appending : LEMMA
    r2 = Rule_stop_appending(r1) IMPLIES
      abs(r2) = Rule_stop_appending(abs(r1))

  sim_continue_appending : LEMMA
    r2 = Rule_continue_appending(r1) IMPLIES
      abs(r2) = Rule_continue_appending(abs(r1))

  sim_black_to_white : LEMMA
    r2 = Rule_black_to_white(r1) IMPLIES
      abs(r2) = Rule_black_to_white(abs(r1))

  sim_append_white : LEMMA
    r2 = Rule_append_white(r1) IMPLIES
      abs(r2) = Rule_append_white(abs(r1))

  next_h : LEMMA 
    next(r1,r2) IMPLIES next(abs(r1),abs(r2))

  R2 : THEORY = 
    Refinement[I1.O_State,
      I1.State,I1.init,I1.next,I1.proj,
      I2.State,I2.init,I2.next,I2.proj,
      abs,I]      

END Refinement2




$$$refine2.prf
(|Refinement2| (I1_TCC1 "" (LEMMA "roots_within") (("" (PROPAX) NIL)))
 (|sim_mutate| "" (SIMULATE-INIT AUTO-REWRITE-REF-B)
  (("" (DO-REWRITE)
    (("" (ASSERT)
      (("" (REPLACE*)
        (("" (ASSERT)
          (("" (BDDSIMP)
            (("1" (INST? :IF-MATCH T)
              (("1" (LIFT-IF :UPDATES? T)
                (("1" (ASSERT)
                  (("1" (BDDSIMP)
                    (("1" (LIFT-IF :UPDATES? T) (("1" (ASSERT) NIL)))
                     ("2" (LIFT-IF :UPDATES? T)
                      (("2" (REPLACE*) (("2" (ASSERT) NIL)))))))))))))
             ("2" (INST? :IF-MATCH T)
              (("2" (LIFT-IF :UPDATES? T)
                (("2" (REPLACE*) (("2" (ASSERT) NIL)))))))
             ("3" (INST? :IF-MATCH T)
              (("3" (LIFT-IF :UPDATES? T) (("3" (ASSERT) NIL)))))))))))))))))
 (|sim_colour_target| "" (SIMULATE-INIT AUTO-REWRITE-REF-B)
  (("" (SIMULATE) NIL)))
 (|sim_stop_colouring_roots| "" (SIMULATE-INIT AUTO-REWRITE-REF-B)
  (("" (SIMULATE) NIL)))
 (|sim_colour_root| "" (SIMULATE-INIT AUTO-REWRITE-REF-B)
  (("" (SIMULATE) (("" (LEMMA "roots_within") (("" (ASSERT) NIL)))))))
 (|sim_stop_propagating| "" (SIMULATE-INIT AUTO-REWRITE-REF-B)
  (("" (LEMMA "i_inv1")
    (("" (AUTO-REWRITE "blackened7") (("" (LEMMA-SIMULATE) NIL)))))))
 (|sim_propagate| "" (AUTO-REWRITE-REF-B)
  (("" (SKOLEM-TYPEPRED)
    (("" (FLATTEN)
      (("" (STOP-REWRITE "I")
        (("" (SKOSIMP)
          (("" (INST + "son(n!1,i!1)(M(r1!1))")
            (("" (DO-REWRITE) (("" (GRIND NIL) NIL)))))))))))))))
 (|sim_stop_appending| "" (SIMULATE-INIT AUTO-REWRITE-REF-B)
  (("" (SIMULATE) NIL)))
 (|sim_continue_appending| "" (SIMULATE-INIT AUTO-REWRITE-REF-B)
  (("" (SIMULATE) NIL)))
 (|sim_black_to_white| "" (SIMULATE-INIT AUTO-REWRITE-REF-B)
  (("" (SIMULATE) NIL)))
 (|sim_append_white| "" (SIMULATE-INIT AUTO-REWRITE-REF-B)
  (("" (SIMULATE) NIL)))
 (|next_h| "" (BEGIN-NEXT)
  (("1" (LEMMA "sim_mutate") (("1" (END-NEXT) NIL)))
   ("2" (LEMMA "sim_colour_target") (("2" (END-NEXT) NIL)))
   ("3" (LEMMA "sim_stop_colouring_roots") (("3" (END-NEXT) NIL)))
   ("4" (LEMMA "sim_colour_root") (("4" (END-NEXT) NIL)))
   ("5" (LEMMA "sim_stop_propagating") (("5" (END-NEXT) NIL)))
   ("6" (LEMMA "sim_propagate") (("6" (END-NEXT) NIL)))
   ("7" (LEMMA "sim_stop_appending") (("7" (END-NEXT) NIL)))
   ("8" (LEMMA "sim_continue_appending") (("8" (END-NEXT) NIL)))
   ("9" (LEMMA "sim_black_to_white") (("9" (END-NEXT) NIL)))
   ("10" (LEMMA "sim_append_white") (("10" (END-NEXT) NIL)))
   ("11" (ASSERT) NIL)))
 (R2_TCC1 "" (SKOSIMP*)
  (("" (EXPAND "proj") (("" (EXPAND "abs") (("" (PROPAX) NIL)))))))
 (R2_TCC2 "" (SKOSIMP*)
  (("" (EXPAND "init")
    (("" (EXPAND "abs") (("" (FLATTEN) (("" (ASSERT) NIL)))))))))
 (R2_TCC3 "" (LEMMA "next_h") (("" (PROPAX) NIL)))
 (R2_TCC4 "" (LEMMA "inv") (("" (PROPAX) NIL))))

$$$memory.pvs

Memory[
  NODES : posnat, 
  SONS  : posnat, 
  ROOTS : posnat] : THEORY

BEGIN

  ASSUMING
    roots_within : ASSUMPTION ROOTS <= NODES
  ENDASSUMING

  Memory : TYPE+

  Node   : TYPE = {n : nat | n < NODES}
  Index  : TYPE = {i : nat | i < SONS}
  Root   : TYPE = {r : nat | r < ROOTS}

  m : VAR Memory
  n,n1,n2,k : VAR Node
  i,i1,i2 : VAR Index

  null_array : Memory
  son        : [Node,Index -> [Memory -> Node]]
  set_son    : [Node,Index,Node -> [Memory -> Memory]]

  mem_ax1 : AXIOM son(n,i)(null_array) = 0

  mem_ax2 : AXIOM son(n1,i1)(set_son(n2,i2,k)(m))
                    =
                  IF n1=n2 AND i1=i2 THEN k ELSE son(n1,i1)(m) ENDIF

  points_to(n1,n2)(m):bool =
    EXISTS (i:Index): son(n1,i)(m)=n2

  accessible(n)(m): INDUCTIVE bool = 
    n < ROOTS OR
    EXISTS k: accessible(k)(m) AND points_to(k,n)(m)

  append_to_free : [Node -> [Memory -> Memory]]

  append_ax: AXIOM
        (NOT accessible(k)(m))
            IMPLIES
          (accessible(n)(append_to_free(k)(m)) IFF (n = k OR accessible(n)(m)))  

END Memory


Accessible_Memory_Properties[
  NODES : posnat, 
  SONS  : posnat, 
  ROOTS : posnat] : THEORY

BEGIN

  ASSUMING
    roots_within : ASSUMPTION ROOTS <= NODES
  ENDASSUMING

  IMPORTING Memory[NODES,SONS,ROOTS]

  m : VAR Memory
  n,n1,n2,k,k1 : VAR Node
  i : VAR Index
  l,l1,l2 : VAR list[Node]

  path(m)(n, n1)(l): RECURSIVE bool =
    (CASES l OF
       null: n = n1,
       cons(k,l): (points_to(k, n1)(m) AND
                   path(m)(n, k)(l))
     ENDCASES)
     MEASURE length(l)

  member_cdr(n, l): RECURSIVE list[Node] =
     (CASES l OF
        null: null,
        cons(k, l1): (IF k = n THEN l1
                        ELSE member_cdr(n, l1) ENDIF)
      ENDCASES)
      MEASURE length(l)

  set_son_points_to_1: LEMMA
      points_to(n, k)(set_son(n, i, k)(m))

  set_son_points_to_2: LEMMA
      n /= n1 IMPLIES
        points_to(n1, k1)(set_son(n, i, k)(m)) =
        points_to(n1, k1)(m)

  set_son_points_to_3: LEMMA
      k/=k1 AND 
      points_to(n1, k1)(set_son(n, i, k)(m)) 
      IMPLIES  points_to(n1, k1)(m)
         
  path_append: LEMMA
     path(m)(n, n1)(l1) AND path(m)(k, k1)(l2) AND points_to(k1, n)(m)
       IMPLIES path(m)(k, n1)(append(l1, cons(k1, l2)))

  accessible_path: LEMMA
    accessible(n)(m)
      = (EXISTS n1, l: path(m)(n1, n)(l) AND n1 < ROOTS)

  path_member_cdr: LEMMA
    path(m)(n, n1)(l) AND member(k, l) IMPLIES
      path(m)(n, k)(member_cdr(k, l))

  length_member_cdr: LEMMA
    cons?(l) IMPLIES
      length(member_cdr(n, l)) < length(l)

  path_without_duplicates: LEMMA
    path(m)(n, n1)(l) IMPLIES
      (EXISTS l1: path(m)(n, n1)(l1) AND
                   NOT member(n1, l1))

  path_set_son: LEMMA
    path(m)(n, n1)(l) AND NOT member(k, l) IMPLIES 
      path(set_son(k, i, k1)(m))(n, n1)(l)

  path_set_son_2: LEMMA
    path(set_son(k, i, k1)(m))(n, n1)(l) AND
    NOT member(k, l)
      IMPLIES 
    path(m)(n, n1)(l)

  path_set_son_3: LEMMA
    path(set_son(k, i, k1)(m))(n, n1)(l) AND
    path(m)(n2, k1)(l2)
      IMPLIES 
    (EXISTS l1: path(m)(n, n1)(l1) OR
                path(m)(n2, n1)(l1))

  accessible1 : LEMMA
    accessible(k)(m) AND accessible(n1)(set_son(n,i,k)(m))
      IMPLIES
    accessible(n1)(m)

  accessible2 : LEMMA
    accessible(k)(m) IMPLIES accessible(k)(set_son(n,i,k)(m))

END Accessible_Memory_Properties


Coloured_Memory[
  NODES : posnat, 
  SONS  : posnat, 
  ROOTS : posnat] : THEORY

BEGIN

  ASSUMING
    roots_within : ASSUMPTION ROOTS <= NODES
  ENDASSUMING

  IMPORTING Memory[NODES,SONS,ROOTS]

  Colour  : TYPE = bool
  Colours : TYPE = [Node -> Colour]

  n  : VAR Node
  i  : VAR Index
  c  : VAR Colour
  cs : VAR Colours
  m  : VAR Memory

  colour(n)(cs):Colour = 
    cs(n)
 
  set_colour(n,c)(cs):Colours = 
    cs WITH [n := c]

  blackened(cs,m):bool =
    FORALL n: accessible(n)(m) IMPLIES colour(n)(cs)

  bw(n,i)(cs,m):bool =
    colour(n)(cs) AND NOT colour(son(n,i)(m))(cs)

  exists_bw(cs,m):bool =
    EXISTS n,i: bw(n,i)(cs,m)

END Coloured_Memory


Memory_Observers
  [NODES : posnat, 
   SONS  : posnat, 
   ROOTS : posnat] : THEORY

BEGIN

  ASSUMING
    roots_within : ASSUMPTION ROOTS <= NODES
  ENDASSUMING

  IMPORTING Coloured_Memory[NODES,SONS,ROOTS]

  cs      : VAR Colours
  m       : VAR Memory
  n       : VAR Node
  i       : VAR Index
  r       : VAR Root
  N,N1,N2 : VAR nat
  I1,I2   : VAR nat
  cl1,cl2 : VAR [nat,nat]

  blackened(N)(cs,m):bool =
    FORALL (n | N <= n):
      accessible(n)(m) IMPLIES colour(n)(cs)

  black_roots(N)(cs):bool =
    FORALL (r | r < N): colour(r)(cs);

  <(cl1,cl2):bool =
    LET 
      n1 = PROJ_1(cl1), i1 = PROJ_2(cl1), 
      n2 = PROJ_1(cl2), i2 = PROJ_2(cl2)
    IN
      n1 < n2 OR (n1 = n2 AND i1 < i2);

  exists_bw(N1,I1,N2,I2)(cs,m):bool =
    EXISTS n,i:
      bw(n,i)(cs,m) AND 
      NOT (n,i) < (N1,I1) AND
      (n,i) < (N2,I2)

  blacks(N1,N2)(cs) : RECURSIVE nat =
    IF N1 < N2 AND N1 < NODES THEN 
      IF colour(N1)(cs) THEN 1 ELSE 0 ENDIF + blacks(N1+1,N2)(cs)
    ELSE
      0
    ENDIF
    MEASURE abs(N2-N1)

END Memory_Observers


Memory_Properties[NODES: posnat, SONS: posnat, ROOTS: posnat]: THEORY
BEGIN
  
  ASSUMING
    roots_within: ASSUMPTION ROOTS <= NODES
  ENDASSUMING
  
  IMPORTING Memory_Observers[NODES, SONS, ROOTS]
  
  IMPORTING Accessible_Memory_Properties[NODES, SONS, ROOTS]
  
  abs((i: int)): nat = IF i < 0 THEN -i ELSE i ENDIF
  
  cs : VAR Colours
  c : VAR Colour
  m : VAR Memory  
  n, n1, n2, k : VAR Node
  i, i1, i2, j : VAR Index
  N, N1, N2 : VAR nat
  I, I1, I2 : VAR nat
  x : VAR nat
  l, l1, l2 : VAR list[Node]
  
  smaller1 : LEMMA 
    NOT (n, i) < (0, 0)
  
  smaller2 : LEMMA 
    (NOT (n, i) < (k, 0) AND (n, i) < (k + 1, 0)) IMPLIES n = k
  
  smaller3 : LEMMA 
    (n, i) < (k, SONS) IFF (n, i) < (k + 1, 0)
  
  smaller4 : LEMMA 
    (NOT (n, i) < (k, j) AND (n, i) < (k, j + 1)) IMPLIES (n, i) = (k, j)
  
  colour1 : LEMMA 
    colour(n)(set_colour(n1, c)(cs)) = IF n = n1 THEN c ELSE colour(n)(cs) ENDIF
  
  colour2 : LEMMA 
    colour(n)(cs) IMPLIES set_colour(n, TRUE)(cs) = cs
  
  blackened1 : LEMMA 
    blackened(n)(cs, m) AND accessible(n)(m) IMPLIES colour(n)(cs)
  
  blackened2 : LEMMA
    accessible(k)(m) AND blackened(N)(cs, m) IMPLIES blackened(N)(cs, set_son(n, i, k)(m))
  
  blackened3 : LEMMA 
    blackened(N)(cs, m) IMPLIES blackened(N)(set_colour(n, TRUE)(cs), m)
  
  blackened4 : LEMMA 
    blackened(n)(cs, m) IMPLIES blackened(n + 1)(set_colour(n, FALSE)(cs), m)
  
  blackened5: LEMMA
    NOT accessible(n)(m) AND blackened(n)(cs, m) IMPLIES 
      blackened(n + 1)(cs, append_to_free(n)(m))
  
  blackened6 : LEMMA 
    blackened(cs, m) IMPLIES blackened(0)(cs, m)
  
  blackened7 : LEMMA 
    black_roots(ROOTS)(cs) AND NOT exists_bw(cs, m) IMPLIES blackened(cs, m)
  
  blackened8 : LEMMA 
    blackened(cs, m) AND accessible(n)(m) IMPLIES colour(n)(cs)
  
  black_roots1 : LEMMA 
    black_roots(N)(cs) IMPLIES black_roots(N)(set_colour(n, TRUE)(cs))
  
  black_roots2 : LEMMA 
    black_roots(0)(cs)
  
  black_roots3 : LEMMA 
    black_roots(n)(cs) IMPLIES black_roots(n + 1)(set_colour(n, TRUE)(cs))
  
  bw1 : LEMMA 
    bw(n, i)(cs, m) = (colour(n)(cs) AND NOT colour(son(n, i)(m))(cs))
  
  bw2 : LEMMA
    (NOT bw(n1, i1)(cs, m) AND bw(n1, i1)(cs, set_son(n2, i2, k)(m)))
      IMPLIES 
    (n1, i1) = (n2, i2)
  
  bw3: LEMMA
    (NOT bw(n, i)(cs, m) AND bw(n, i)(set_colour(k, TRUE)(cs), m))
      IMPLIES 
    (n = k AND NOT colour(n)(cs))
  
  bw4 : LEMMA 
    bw(n, i)(cs, m) IMPLIES colour(n)(cs) AND NOT colour(son(n, i)(m))(cs)
  
  exists_bw1 : LEMMA
    colour(k)(cs) AND NOT exists_bw(cs, m) IMPLIES NOT exists_bw(cs, set_son(n, i, k)(m))
  
  exists_bw2 : LEMMA 
    exists_bw(cs, m) = exists_bw(0, 0, NODES, 0)(cs, m)
  
  exists_bw3 : LEMMA 
    NOT exists_bw(N, I, N, I)(cs, m)
  
  exists_bw4 : LEMMA
    NOT exists_bw(0, 0, N, I)(cs, m) AND exists_bw(0, 0, N, I)(cs, set_son(n, i, k)(m))
      IMPLIES 
    NOT colour(k)(cs) AND (n, i) < (N, I)
  
  exists_bw5 : LEMMA
    accessible(n)(m) AND NOT colour(n)(cs) AND black_roots(ROOTS)(cs)
      IMPLIES 
    exists_bw(0, 0, NODES, 0)(cs, m)
  
  exists_bw6 : LEMMA
    exists_bw(0, 0, NODES, 0)(cs, m)
      IMPLIES 
    exists_bw(0, 0, N, I)(cs, m) OR exists_bw(N, I, NODES, 0)(cs, m)
  
  exists_bw7 : LEMMA
    exists_bw(N, I, NODES, 0)(cs, m) AND (n, i) < (N, I)
      IMPLIES 
    exists_bw(N, I, NODES, 0)(cs, set_son(n, i, k)(m))
  
  exists_bw8 : LEMMA
    NOT colour(n)(cs) AND exists_bw(0, 0, n + 1, 0)(cs, m)
      IMPLIES 
    exists_bw(0, 0, n, 0)(cs, m)
  
  exists_bw9 : LEMMA
    NOT colour(n)(cs) AND exists_bw(n, 0, NODES, 0)(cs, m)
      IMPLIES 
    exists_bw(n + 1, 0, NODES, 0)(cs, m)
  
  exists_bw10 : LEMMA 
    exists_bw(0, 0, N + 1, 0)(cs, m) IMPLIES exists_bw(0, 0, N, SONS)(cs, m)
  
  exists_bw11 : LEMMA
    exists_bw(N, SONS, NODES, 0)(cs, m) IMPLIES exists_bw(N + 1, 0, NODES, 0)(cs, m)
  
  exists_bw12 : LEMMA
    colour(son(n, i)(m))(cs) AND exists_bw(0, 0, n, i + 1)(cs, m)
      IMPLIES 
    exists_bw(0, 0, n, i)(cs, m)
  
  exists_bw13 : LEMMA
    colour(son(n, i)(m))(cs) AND exists_bw(n, i, NODES, 0)(cs, m)
      IMPLIES 
    exists_bw(n, i + 1, NODES, 0)(cs, m)
  
  exists_bw14 : LEMMA
    exists_bw(N1, I1, N2, I2)(cs, m)
      IMPLIES 
    EXISTS (n: Node, i: Index):
      bw(n, i)(cs, m) AND NOT (n, i) < (N1, I1) AND (n, i) < (N2, I2)
  
  blacks1 : LEMMA 
    blacks(N, N)(cs) = 0
  
  blacks2 : LEMMA 
    blacks(N1, N2)(cs) <= blacks(N1, N2)(set_colour(n, TRUE)(cs))
  
  blacks3 : LEMMA 
    NOT colour(n)(cs) IMPLIES blacks(n, N)(cs) = blacks(n + 1, N)(cs)
  
  blacks4 : LEMMA 
    (n < N AND colour(n)(cs)) IMPLIES blacks(n, N)(cs) = blacks(n + 1, N)(cs) + 1
  
  blacks5_1 : LEMMA
    (n < N1 OR n >= N2) IMPLIES blacks(N1, N2)(set_colour(n, c)(cs)) = blacks(N1, N2)(cs)
  
  blacks5_2 : LEMMA
    (n >= N1 AND n < N2 AND NOT colour(n)(cs))
      IMPLIES 
    blacks(N1, N2)(set_colour(n, TRUE)(cs)) = blacks(N1, N2)(cs) + 1
  
  blacks5 : LEMMA
    (blacks(0, NODES)(set_colour(n, TRUE)(cs)) = blacks(0, NODES)(cs)) IMPLIES colour(n)(cs)
  
  blacks6 : LEMMA 
    NOT colour(n2)(cs) IMPLIES blacks(n1, n2 + 1)(cs) = blacks(n1, n2)(cs)
  
  blacks7 : LEMMA
    n1 <= n2 AND colour(n2)(cs) IMPLIES blacks(n1, n2 + 1)(cs) = blacks(n1, n2)(cs) + 1
  
END Memory_Properties











$$$memory.prf
(|Memory|
 (|son_TCC1| "" (GRIND)
  (("" (INST + "LAMBDA (x:Node,i:Index)(m:Memory):x") NIL))))(|Accessible_Memory_Properties|
                                                              (IMPORTING1_TCC1
                                                               ""
                                                               (LEMMA
                                                                "roots_within")
                                                               ((""
                                                                 (PROPAX)
                                                                 NIL)))
                                                              (|path_TCC1|
                                                               ""
                                                               (TERMINATION-TCC)
                                                               NIL)
                                                              (|member_cdr_TCC1|
                                                               ""
                                                               (TERMINATION-TCC)
                                                               NIL)
                                                              (|set_son_points_to_1|
                                                               ""
                                                               (MEM-PROP)
                                                               NIL)
                                                              (|set_son_points_to_2|
                                                               ""
                                                               (MEM-PROP)
                                                               NIL)
                                                              (|set_son_points_to_3|
                                                               ""
                                                               (MEM-PROP)
                                                               NIL)
                                                              (|path_append|
                                                               ""
                                                               (INDUCT-AND-SIMPLIFY
                                                                "l1")
                                                               NIL)
                                                              (|accessible_path|
                                                               ""
                                                               (SKOSIMP*)
                                                               ((""
                                                                 (IFF)
                                                                 ((""
                                                                   (PROP)
                                                                   (("1"
                                                                     (GENERALIZE
                                                                      "n!1"
                                                                      "n")
                                                                     (("1"
                                                                       (LEMMA
                                                                        "accessible_induction")
                                                                       (("1"
                                                                         (INST
                                                                          -
                                                                          "LAMBDA n: (LAMBDA m: (EXISTS (n1: Node[NODES, SONS, ROOTS]), (l: list[Node]):
              path(m)(n1, n)(l) AND n1 < ROOTS))")
                                                                         (("1"
                                                                           (BETA)
                                                                           (("1"
                                                                             (PROP)
                                                                             (("1"
                                                                               (GRIND
                                                                                :DEFS
                                                                                NIL)
                                                                               NIL)
                                                                              ("2"
                                                                               (HIDE
                                                                                2)
                                                                               (("2"
                                                                                 (SKOSIMP*)
                                                                                 (("2"
                                                                                   (GRIND
                                                                                    :DEFS
                                                                                    NIL
                                                                                    :IF-MATCH
                                                                                    NIL)
                                                                                   (("1"
                                                                                     (INST
                                                                                      +
                                                                                      "n!2"
                                                                                      "null")
                                                                                     (("1"
                                                                                       (GRIND)
                                                                                       NIL)))
                                                                                    ("2"
                                                                                     (INST
                                                                                      +
                                                                                      "n1!1"
                                                                                      "cons(k!1, l!1)")
                                                                                     (("2"
                                                                                       (EXPAND
                                                                                        "path"
                                                                                        +)
                                                                                       (("2"
                                                                                         (PROPAX)
                                                                                         NIL)))))))))))))))))))))
                                                                    ("2"
                                                                     (SKOSIMP*)
                                                                     (("2"
                                                                       (GENERALIZE
                                                                        "n!1"
                                                                        "n")
                                                                       (("2"
                                                                         (GENERALIZE
                                                                          "l!1"
                                                                          "l")
                                                                         (("2"
                                                                           (INDUCT
                                                                            "l")
                                                                           (("1"
                                                                             (SKOSIMP*)
                                                                             (("1"
                                                                               (EXPAND
                                                                                "path")
                                                                               (("1"
                                                                                 (EXPAND
                                                                                  "accessible")
                                                                                 (("1"
                                                                                   (ASSERT)
                                                                                   NIL)))))))
                                                                            ("2"
                                                                             (SKOSIMP*)
                                                                             (("2"
                                                                               (EXPAND
                                                                                "path"
                                                                                -2)
                                                                               (("2"
                                                                                 (FLATTEN)
                                                                                 (("2"
                                                                                   (INST
                                                                                    -
                                                                                    "cons1_var!1")
                                                                                   (("2"
                                                                                     (EXPAND
                                                                                      "accessible"
                                                                                      +)
                                                                                     (("2"
                                                                                       (GRIND
                                                                                        :DEFS
                                                                                        NIL)
                                                                                       NIL)))))))))))))))))))))))))
                                                              (|path_member_cdr|
                                                               ""
                                                               (INDUCT-AND-SIMPLIFY
                                                                "l")
                                                               NIL)
                                                              (|length_member_cdr|
                                                               ""
                                                               (INDUCT-AND-SIMPLIFY
                                                                "l")
                                                               NIL)
                                                              (|path_without_duplicates_TCC1|
                                                               ""
                                                               (ASSUMING-TCC))
                                                              (|path_without_duplicates_TCC2|
                                                               ""
                                                               (ASSUMING-TCC))
                                                              (|path_without_duplicates|
                                                               ""
                                                               (MEASURE-INDUCT+
                                                                "length(l)"
                                                                "l")
                                                               ((""
                                                                 (SKOSIMP*)
                                                                 ((""
                                                                   (EXPAND
                                                                    "path"
                                                                    -2)
                                                                   ((""
                                                                     (APPLY
                                                                      (THEN
                                                                       (LIFT-IF)
                                                                       (PROP)))
                                                                     (("1"
                                                                       (INST
                                                                        +
                                                                        "x!1")
                                                                       (("1"
                                                                         (GRIND)
                                                                         NIL)))
                                                                      ("2"
                                                                       (CASE
                                                                        "member(n1!1, x!1)")
                                                                       (("1"
                                                                         (INST
                                                                          -
                                                                          "member_cdr(n1!1, x!1)")
                                                                         (("1"
                                                                           (INST?)
                                                                           (("1"
                                                                             (PROP)
                                                                             (("1"
                                                                               (USE
                                                                                "path_member_cdr")
                                                                               (("1"
                                                                                 (GRIND)
                                                                                 NIL)))
                                                                              ("2"
                                                                               (USE
                                                                                "length_member_cdr")
                                                                               (("2"
                                                                                 (ASSERT)
                                                                                 NIL)))))))))
                                                                        ("2"
                                                                         (INST?
                                                                          +)
                                                                         (("2"
                                                                           (GRIND)
                                                                           NIL)))))))))))))
                                                              (|path_set_son|
                                                               ""
                                                               (INDUCT-AND-SIMPLIFY
                                                                "l"
                                                                :EXCLUDE
                                                                ("points_to"))
                                                               ((""
                                                                 (REWRITE
                                                                  "set_son_points_to_2")
                                                                 NIL)))
                                                              (|path_set_son_2|
                                                               ""
                                                               (INDUCT-AND-SIMPLIFY
                                                                "l"
                                                                :EXCLUDE
                                                                ("points_to"))
                                                               ((""
                                                                 (REWRITE
                                                                  "set_son_points_to_2")
                                                                 NIL)))
                                                              (|path_set_son_3|
                                                               ""
                                                               (INDUCT
                                                                "l")
                                                               (("1"
                                                                 (SKOSIMP*)
                                                                 (("1"
                                                                   (INST
                                                                    +
                                                                    "null[Node]")
                                                                   (("1"
                                                                     (GRIND)
                                                                     NIL)))))
                                                                ("2"
                                                                 (SKOSIMP*)
                                                                 (("2"
                                                                   (GRIND
                                                                    :IF-MATCH
                                                                    NIL
                                                                    :EXCLUDE
                                                                    ("points_to"))
                                                                   (("2"
                                                                     (INST?
                                                                      -)
                                                                     (("2"
                                                                       (INST?
                                                                        -)
                                                                       (("2"
                                                                         (PROP)
                                                                         (("2"
                                                                           (SKOSIMP*)
                                                                           (("2"
                                                                             (CASE
                                                                              "cons1_var!1 = k!1")
                                                                             (("1"
                                                                               (CASE
                                                                                "n1!1 = k1!1")
                                                                               (("1"
                                                                                 (INST
                                                                                  +
                                                                                  "l2!1")
                                                                                 (("1"
                                                                                   (GROUND)
                                                                                   NIL)))
                                                                                ("2"
                                                                                 (USE
                                                                                  "set_son_points_to_3")
                                                                                 (("2"
                                                                                   (GROUND)
                                                                                   (("1"
                                                                                     (INST
                                                                                      +
                                                                                      "cons(cons1_var!1, l1!1)")
                                                                                     (("1"
                                                                                       (GRIND)
                                                                                       NIL)))
                                                                                    ("2"
                                                                                     (INST
                                                                                      +
                                                                                      "cons(cons1_var!1, l1!1)")
                                                                                     (("2"
                                                                                       (GRIND)
                                                                                       NIL)))))))))
                                                                              ("2"
                                                                               (REWRITE
                                                                                "set_son_points_to_2")
                                                                               (("2"
                                                                                 (INST
                                                                                  +
                                                                                  "cons(cons1_var!1, l1!1)")
                                                                                 (("2"
                                                                                   (GRIND)
                                                                                   NIL)))))))))))))))))))))
                                                              (|accessible1|
                                                               ""
                                                               (SKOSIMP*)
                                                               ((""
                                                                 (SIMPLIFY-WITH-REWRITES
                                                                  :REWRITES
                                                                  "accessible_path")
                                                                 ((""
                                                                   (SKOSIMP*)
                                                                   ((""
                                                                     (FORWARD-CHAIN
                                                                      "path_set_son_3")
                                                                     ((""
                                                                       (GRIND
                                                                        :IF-MATCH
                                                                        NIL)
                                                                       (("1"
                                                                         (GRIND)
                                                                         NIL)
                                                                        ("2"
                                                                         (GRIND)
                                                                         NIL)))))))))))
                                                              (|accessible2|
                                                               ""
                                                               (SKOSIMP*)
                                                               ((""
                                                                 (SIMPLIFY-WITH-REWRITES
                                                                  :REWRITES
                                                                  "accessible_path")
                                                                 ((""
                                                                   (SKOSIMP)
                                                                   ((""
                                                                     (CASE
                                                                      "member(n!1, l!1)")
                                                                     (("1"
                                                                       (LEMMA
                                                                        "path_member_cdr"
                                                                        ("k"
                                                                         "n!1"))
                                                                       (("1"
                                                                         (INST?)
                                                                         (("1"
                                                                           (PROP)
                                                                           (("1"
                                                                             (FORWARD-CHAIN
                                                                              "path_without_duplicates")
                                                                             (("1"
                                                                               (SKOSIMP)
                                                                               (("1"
                                                                                 (INST
                                                                                  +
                                                                                  "n1!1"
                                                                                  "cons(n!1, l1!1)")
                                                                                 (("1"
                                                                                   (GRIND
                                                                                    :EXCLUDE
                                                                                    ("points_to"))
                                                                                   (("1"
                                                                                     (REWRITE
                                                                                      "path_set_son")
                                                                                     NIL)
                                                                                    ("2"
                                                                                     (REWRITE
                                                                                      "set_son_points_to_1")
                                                                                     NIL)))))))))))))))
                                                                      ("2"
                                                                       (INST?)
                                                                       (("2"
                                                                         (INST?)
                                                                         (("2"
                                                                           (REWRITE
                                                                            "path_set_son")
                                                                           (("2"
                                                                             (ASSERT)
                                                                             NIL))))))))))))))))(|Coloured_Memory|
                                                                                                 (IMPORTING1_TCC1
                                                                                                  ""
                                                                                                  (LEMMA
                                                                                                   "roots_within")
                                                                                                  ((""
                                                                                                    (PROPAX)
                                                                                                    NIL))))(|Memory_Observers|
                                                                                                            (IMPORTING1_TCC1
                                                                                                             ""
                                                                                                             (LEMMA
                                                                                                              "roots_within")
                                                                                                             ((""
                                                                                                               (PROPAX)
                                                                                                               NIL)))
                                                                                                            (|black_roots_TCC1|
                                                                                                             ""
                                                                                                             (LEMMA
                                                                                                              "roots_within")
                                                                                                             ((""
                                                                                                               (GRIND)
                                                                                                               NIL)))
                                                                                                            (|blacks_TCC1|
                                                                                                             ""
                                                                                                             (SUBTYPE-TCC)
                                                                                                             NIL)
                                                                                                            (|blacks_TCC2|
                                                                                                             ""
                                                                                                             (TERMINATION-TCC)
                                                                                                             NIL))(|Memory_Properties|
                                                                                                                   (IMPORTING1_TCC1
                                                                                                                    ""
                                                                                                                    (LEMMA
                                                                                                                     "roots_within")
                                                                                                                    ((""
                                                                                                                      (PROPAX)
                                                                                                                      NIL)))
                                                                                                                   (|abs_TCC1|
                                                                                                                    ""
                                                                                                                    (SUBTYPE-TCC)
                                                                                                                    NIL)
                                                                                                                   (|abs_TCC2|
                                                                                                                    ""
                                                                                                                    (SUBTYPE-TCC)
                                                                                                                    NIL)
                                                                                                                   (|smaller1|
                                                                                                                    ""
                                                                                                                    (MEM-PROP)
                                                                                                                    NIL)
                                                                                                                   (|smaller2|
                                                                                                                    ""
                                                                                                                    (MEM-PROP)
                                                                                                                    NIL)
                                                                                                                   (|smaller3|
                                                                                                                    ""
                                                                                                                    (MEM-PROP)
                                                                                                                    NIL)
                                                                                                                   (|smaller4|
                                                                                                                    ""
                                                                                                                    (MEM-PROP)
                                                                                                                    NIL)
                                                                                                                   (|colour1|
                                                                                                                    ""
                                                                                                                    (MEM-PROP)
                                                                                                                    NIL)
                                                                                                                   (|colour2|
                                                                                                                    ""
                                                                                                                    (SKOLEM!)
                                                                                                                    ((""
                                                                                                                      (FLATTEN)
                                                                                                                      ((""
                                                                                                                        (GRIND)
                                                                                                                        ((""
                                                                                                                          (APPLY-EXTENSIONALITY)
                                                                                                                          ((""
                                                                                                                            (GRIND)
                                                                                                                            NIL)))))))))
                                                                                                                   (|blackened1|
                                                                                                                    ""
                                                                                                                    (MEM-PROP)
                                                                                                                    NIL)
                                                                                                                   (|blackened2|
                                                                                                                    ""
                                                                                                                    (SKOLEM-TYPEPRED)
                                                                                                                    ((""
                                                                                                                      (FLATTEN)
                                                                                                                      ((""
                                                                                                                        (EXPAND
                                                                                                                         "blackened")
                                                                                                                        ((""
                                                                                                                          (SKOLEM-TYPEPRED)
                                                                                                                          ((""
                                                                                                                            (FLATTEN)
                                                                                                                            ((""
                                                                                                                              (AUTO-REWRITE-THEORY
                                                                                                                               "Memory[NODES,SONS,ROOTS]"
                                                                                                                               :ALWAYS?
                                                                                                                               T)
                                                                                                                              ((""
                                                                                                                                (USE
                                                                                                                                 "accessible1")
                                                                                                                                ((""
                                                                                                                                  (BDDSIMP)
                                                                                                                                  ((""
                                                                                                                                    (INST?)
                                                                                                                                    ((""
                                                                                                                                      (BDDSIMP)
                                                                                                                                      ((""
                                                                                                                                        (PROPAX)
                                                                                                                                        NIL)))))))))))))))))))))
                                                                                                                   (|blackened3|
                                                                                                                    ""
                                                                                                                    (MEM-PROP)
                                                                                                                    NIL)
                                                                                                                   (|blackened4|
                                                                                                                    ""
                                                                                                                    (MEM-PROP)
                                                                                                                    NIL)
                                                                                                                   (|blackened5|
                                                                                                                    ""
                                                                                                                    (SKOSIMP)
                                                                                                                    ((""
                                                                                                                      (EXPAND
                                                                                                                       "blackened")
                                                                                                                      ((""
                                                                                                                        (SKOSIMP)
                                                                                                                        ((""
                                                                                                                          (AUTO-REWRITE
                                                                                                                           "append_ax")
                                                                                                                          ((""
                                                                                                                            (GRIND
                                                                                                                             :EXCLUDE
                                                                                                                             "accessible")
                                                                                                                            NIL)))))))))
                                                                                                                   (|blackened6|
                                                                                                                    ""
                                                                                                                    (MEM-PROP)
                                                                                                                    NIL)
                                                                                                                   (|blackened7|
                                                                                                                    ""
                                                                                                                    (AUTO-REWRITE-THEORY
                                                                                                                     "Memory[NODES,SONS,ROOTS]"
                                                                                                                     :ALWAYS?
                                                                                                                     T)
                                                                                                                    ((""
                                                                                                                      (SKOSIMP)
                                                                                                                      ((""
                                                                                                                        (EXPAND
                                                                                                                         "blackened")
                                                                                                                        ((""
                                                                                                                          (SKOLEM-TYPEPRED)
                                                                                                                          ((""
                                                                                                                            (FLATTEN)
                                                                                                                            ((""
                                                                                                                              (GENERALIZE
                                                                                                                               "n!1"
                                                                                                                               "n")
                                                                                                                              ((""
                                                                                                                                (LEMMA
                                                                                                                                 "accessible_induction")
                                                                                                                                ((""
                                                                                                                                  (INST
                                                                                                                                   -
                                                                                                                                   "(LAMBDA (n): LAMBDA m:
         n < NODES AND black_roots(ROOTS)(cs!1)
             IMPLIES exists_bw(cs!1, m) OR colour(n)(cs!1))")
                                                                                                                                  ((""
                                                                                                                                    (PROP)
                                                                                                                                    (("1"
                                                                                                                                      (INST?)
                                                                                                                                      (("1"
                                                                                                                                        (ASSERT)
                                                                                                                                        (("1"
                                                                                                                                          (SKOSIMP*)
                                                                                                                                          (("1"
                                                                                                                                            (INST?)
                                                                                                                                            (("1"
                                                                                                                                              (PROP)
                                                                                                                                              NIL)))))))))
                                                                                                                                     ("2"
                                                                                                                                      (HIDE
                                                                                                                                       2)
                                                                                                                                      (("2"
                                                                                                                                        (SKOSIMP*)
                                                                                                                                        (("2"
                                                                                                                                          (BETA)
                                                                                                                                          (("2"
                                                                                                                                            (PROP)
                                                                                                                                            (("1"
                                                                                                                                              (EXPAND
                                                                                                                                               "black_roots")
                                                                                                                                              (("1"
                                                                                                                                                (INST?)
                                                                                                                                                NIL)))
                                                                                                                                             ("2"
                                                                                                                                              (SKOSIMP*)
                                                                                                                                              (("2"
                                                                                                                                                (PROP)
                                                                                                                                                (("1"
                                                                                                                                                  (EXPAND
                                                                                                                                                   "exists_bw")
                                                                                                                                                  (("1"
                                                                                                                                                    (EXPAND
                                                                                                                                                     "bw")
                                                                                                                                                    (("1"
                                                                                                                                                      (EXPAND
                                                                                                                                                       "points_to")
                                                                                                                                                      (("1"
                                                                                                                                                        (SKOSIMP*)
                                                                                                                                                        (("1"
                                                                                                                                                          (INST?)
                                                                                                                                                          (("1"
                                                                                                                                                            (GROUND)
                                                                                                                                                            NIL)))))))))))
                                                                                                                                                 ("2"
                                                                                                                                                  (TYPEPRED
                                                                                                                                                   "k!1")
                                                                                                                                                  (("2"
                                                                                                                                                    (PROPAX)
                                                                                                                                                    NIL)))))))))))))))))))))))))))))))))
                                                                                                                   (|blackened8|
                                                                                                                    ""
                                                                                                                    (MEM-PROP)
                                                                                                                    NIL)
                                                                                                                   (|black_roots1|
                                                                                                                    ""
                                                                                                                    (MEM-PROP)
                                                                                                                    NIL)
                                                                                                                   (|black_roots2|
                                                                                                                    ""
                                                                                                                    (MEM-PROP)
                                                                                                                    NIL)
                                                                                                                   (|black_roots3|
                                                                                                                    ""
                                                                                                                    (MEM-PROP)
                                                                                                                    NIL)
                                                                                                                   (|bw1|
                                                                                                                    ""
                                                                                                                    (MEM-PROP)
                                                                                                                    NIL)
                                                                                                                   (|bw2|
                                                                                                                    ""
                                                                                                                    (MEM-PROP)
                                                                                                                    NIL)
                                                                                                                   (|bw3|
                                                                                                                    ""
                                                                                                                    (MEM-PROP)
                                                                                                                    NIL)
                                                                                                                   (|bw4|
                                                                                                                    ""
                                                                                                                    (MEM-PROP)
                                                                                                                    NIL)
                                                                                                                   (|exists_bw1|
                                                                                                                    ""
                                                                                                                    (MEM-PROP)
                                                                                                                    NIL)
                                                                                                                   (|exists_bw2|
                                                                                                                    ""
                                                                                                                    (MEM-PROP)
                                                                                                                    NIL)
                                                                                                                   (|exists_bw3|
                                                                                                                    ""
                                                                                                                    (MEM-PROP)
                                                                                                                    NIL)
                                                                                                                   (|exists_bw4|
                                                                                                                    ""
                                                                                                                    (MEM-PROP)
                                                                                                                    NIL)
                                                                                                                   (|exists_bw5|
                                                                                                                    ""
                                                                                                                    (SKOSIMP*
                                                                                                                     :PREDS?
                                                                                                                     T)
                                                                                                                    ((""
                                                                                                                      (EXPAND
                                                                                                                       "exists_bw")
                                                                                                                      ((""
                                                                                                                        (EXPAND
                                                                                                                         "<")
                                                                                                                        ((""
                                                                                                                          (LEMMA
                                                                                                                           "blackened7")
                                                                                                                          ((""
                                                                                                                            (INST?)
                                                                                                                            ((""
                                                                                                                              (INST?)
                                                                                                                              ((""
                                                                                                                                (PROP)
                                                                                                                                (("1"
                                                                                                                                  (EXPAND
                                                                                                                                   "blackened")
                                                                                                                                  (("1"
                                                                                                                                    (INST?)
                                                                                                                                    (("1"
                                                                                                                                      (PROP)
                                                                                                                                      NIL)))))
                                                                                                                                 ("2"
                                                                                                                                  (EXPAND
                                                                                                                                   "exists_bw")
                                                                                                                                  (("2"
                                                                                                                                    (PROPAX)
                                                                                                                                    NIL)))))))))))))))))
                                                                                                                   (|exists_bw6|
                                                                                                                    ""
                                                                                                                    (MEM-PROP)
                                                                                                                    NIL)
                                                                                                                   (|exists_bw7|
                                                                                                                    ""
                                                                                                                    (MEM-PROP)
                                                                                                                    NIL)
                                                                                                                   (|exists_bw8|
                                                                                                                    ""
                                                                                                                    (MEM-PROP)
                                                                                                                    NIL)
                                                                                                                   (|exists_bw9|
                                                                                                                    ""
                                                                                                                    (MEM-PROP)
                                                                                                                    NIL)
                                                                                                                   (|exists_bw10|
                                                                                                                    ""
                                                                                                                    (MEM-PROP)
                                                                                                                    NIL)
                                                                                                                   (|exists_bw11|
                                                                                                                    ""
                                                                                                                    (MEM-PROP)
                                                                                                                    NIL)
                                                                                                                   (|exists_bw12|
                                                                                                                    ""
                                                                                                                    (AUTO-REWRITE-THEORY
                                                                                                                     "Memory[NODES,SONS,ROOTS]"
                                                                                                                     :ALWAYS?
                                                                                                                     T)
                                                                                                                    ((""
                                                                                                                      (SKOLEM-TYPEPRED)
                                                                                                                      ((""
                                                                                                                        (FLATTEN)
                                                                                                                        ((""
                                                                                                                          (EXPAND
                                                                                                                           "exists_bw")
                                                                                                                          ((""
                                                                                                                            (SKOLEM-TYPEPRED)
                                                                                                                            ((""
                                                                                                                              (FLATTEN)
                                                                                                                              ((""
                                                                                                                                (CASE
                                                                                                                                 "(n!2,i!2)=(n!1,i!1)")
                                                                                                                                (("1"
                                                                                                                                  (GRIND)
                                                                                                                                  NIL)
                                                                                                                                 ("2"
                                                                                                                                  (INST?)
                                                                                                                                  (("2"
                                                                                                                                    (GRIND)
                                                                                                                                    NIL)))))))))))))))))
                                                                                                                   (|exists_bw13|
                                                                                                                    ""
                                                                                                                    (AUTO-REWRITE-THEORY
                                                                                                                     "Memory[NODES,SONS,ROOTS]"
                                                                                                                     :ALWAYS?
                                                                                                                     T)
                                                                                                                    ((""
                                                                                                                      (SKOLEM-TYPEPRED)
                                                                                                                      ((""
                                                                                                                        (FLATTEN)
                                                                                                                        ((""
                                                                                                                          (EXPAND
                                                                                                                           "exists_bw")
                                                                                                                          ((""
                                                                                                                            (SKOLEM-TYPEPRED)
                                                                                                                            ((""
                                                                                                                              (CASE
                                                                                                                               "(n!2,i!2)=(n!1,i!1)")
                                                                                                                              (("1"
                                                                                                                                (GRIND)
                                                                                                                                NIL)
                                                                                                                               ("2"
                                                                                                                                (INST?)
                                                                                                                                (("2"
                                                                                                                                  (GRIND)
                                                                                                                                  NIL)))))))))))))))
                                                                                                                   (|exists_bw14_TCC1|
                                                                                                                    ""
                                                                                                                    (ASSUMING-TCC))
                                                                                                                   (|exists_bw14_TCC2|
                                                                                                                    ""
                                                                                                                    (ASSUMING-TCC))
                                                                                                                   (|exists_bw14_TCC3|
                                                                                                                    ""
                                                                                                                    (ASSUMING-TCC))
                                                                                                                   (|exists_bw14_TCC4|
                                                                                                                    ""
                                                                                                                    (ASSUMING-TCC))
                                                                                                                   (|exists_bw14|
                                                                                                                    ""
                                                                                                                    (MEM-PROP)
                                                                                                                    NIL)
                                                                                                                   (|blacks1|
                                                                                                                    ""
                                                                                                                    (MEM-PROP)
                                                                                                                    NIL)
                                                                                                                   (|blacks2|
                                                                                                                    ""
                                                                                                                    (AUTO-REWRITE-THEORY
                                                                                                                     "Memory[NODES,SONS,ROOTS]"
                                                                                                                     :ALWAYS?
                                                                                                                     T)
                                                                                                                    ((""
                                                                                                                      (SKOLEM
                                                                                                                       1
                                                                                                                       ("_"
                                                                                                                        "_"
                                                                                                                        "CS0"
                                                                                                                        "N0"))
                                                                                                                      ((""
                                                                                                                        (MEASURE-INDUCT
                                                                                                                         "abs(N2-N1)"
                                                                                                                         ("N1"
                                                                                                                          "N2"))
                                                                                                                        ((""
                                                                                                                          (SKOLEM
                                                                                                                           1
                                                                                                                           ("X1"
                                                                                                                            "X2"))
                                                                                                                          ((""
                                                                                                                            (FLATTEN)
                                                                                                                            ((""
                                                                                                                              (EXPAND
                                                                                                                               "blacks"
                                                                                                                               1)
                                                                                                                              ((""
                                                                                                                                (GRIND)
                                                                                                                                NIL)))))))))))))
                                                                                                                   (|blacks3|
                                                                                                                    ""
                                                                                                                    (SKOLEM!)
                                                                                                                    ((""
                                                                                                                      (FLATTEN)
                                                                                                                      ((""
                                                                                                                        (EXPAND
                                                                                                                         "blacks")
                                                                                                                        ((""
                                                                                                                          (GRIND)
                                                                                                                          NIL)))))))
                                                                                                                   (|blacks4|
                                                                                                                    ""
                                                                                                                    (MEM-PROP)
                                                                                                                    NIL)
                                                                                                                   (|blacks5_1|
                                                                                                                    ""
                                                                                                                    (AUTO-REWRITE-THEORY
                                                                                                                     "Memory[NODES,SONS,ROOTS]"
                                                                                                                     :ALWAYS?
                                                                                                                     T)
                                                                                                                    ((""
                                                                                                                      (SKOLEM
                                                                                                                       1
                                                                                                                       ("_"
                                                                                                                        "_"
                                                                                                                        "C0"
                                                                                                                        "CS0"
                                                                                                                        "N0"))
                                                                                                                      ((""
                                                                                                                        (MEASURE-INDUCT
                                                                                                                         "abs(N2-N1)"
                                                                                                                         ("N1"
                                                                                                                          "N2"))
                                                                                                                        ((""
                                                                                                                          (SKOLEM
                                                                                                                           1
                                                                                                                           ("X1"
                                                                                                                            "X2"))
                                                                                                                          ((""
                                                                                                                            (FLATTEN)
                                                                                                                            ((""
                                                                                                                              (EXPAND
                                                                                                                               "blacks"
                                                                                                                               +)
                                                                                                                              ((""
                                                                                                                                (GRIND)
                                                                                                                                NIL)))))))))))))
                                                                                                                   (|blacks5_2|
                                                                                                                    ""
                                                                                                                    (AUTO-REWRITE-THEORY
                                                                                                                     "Memory[NODES,SONS,ROOTS]"
                                                                                                                     :ALWAYS?
                                                                                                                     T)
                                                                                                                    ((""
                                                                                                                      (AUTO-REWRITE
                                                                                                                       "colour1")
                                                                                                                      ((""
                                                                                                                        (AUTO-REWRITE
                                                                                                                         "blacks5_1")
                                                                                                                        ((""
                                                                                                                          (SKOLEM
                                                                                                                           1
                                                                                                                           ("_"
                                                                                                                            "_"
                                                                                                                            "CS0"
                                                                                                                            "N0"))
                                                                                                                          ((""
                                                                                                                            (MEASURE-INDUCT
                                                                                                                             "abs(N2-N1)"
                                                                                                                             ("N1"
                                                                                                                              "N2"))
                                                                                                                            ((""
                                                                                                                              (SKOLEM
                                                                                                                               1
                                                                                                                               ("X1"
                                                                                                                                "X2"))
                                                                                                                              ((""
                                                                                                                                (FLATTEN)
                                                                                                                                ((""
                                                                                                                                  (CASE
                                                                                                                                   "N0=X1")
                                                                                                                                  (("1"
                                                                                                                                    (EXPAND
                                                                                                                                     "blacks"
                                                                                                                                     +)
                                                                                                                                    (("1"
                                                                                                                                      (ASSERT)
                                                                                                                                      NIL)))
                                                                                                                                   ("2"
                                                                                                                                    (EXPAND
                                                                                                                                     "blacks"
                                                                                                                                     +)
                                                                                                                                    (("2"
                                                                                                                                      (LIFT-IF
                                                                                                                                       +)
                                                                                                                                      (("2"
                                                                                                                                        (ASSERT)
                                                                                                                                        (("2"
                                                                                                                                          (INST?)
                                                                                                                                          (("2"
                                                                                                                                            (BDDSIMP
                                                                                                                                             +)
                                                                                                                                            (("1"
                                                                                                                                              (EXPAND
                                                                                                                                               "abs")
                                                                                                                                              (("1"
                                                                                                                                                (ASSERT)
                                                                                                                                                NIL)))
                                                                                                                                             ("2"
                                                                                                                                              (EXPAND
                                                                                                                                               "abs")
                                                                                                                                              (("2"
                                                                                                                                                (PROPAX)
                                                                                                                                                NIL)))))))))))))))))))))))))))))
                                                                                                                   (|blacks5|
                                                                                                                    ""
                                                                                                                    (SKOLEM-TYPEPRED)
                                                                                                                    ((""
                                                                                                                      (FLATTEN)
                                                                                                                      ((""
                                                                                                                        (LEMMA
                                                                                                                         "blacks5_2")
                                                                                                                        ((""
                                                                                                                          (INST?)
                                                                                                                          ((""
                                                                                                                            (BDDSIMP)
                                                                                                                            (("1"
                                                                                                                              (ASSERT)
                                                                                                                              NIL)
                                                                                                                             ("2"
                                                                                                                              (ASSERT)
                                                                                                                              NIL)))))))))))
                                                                                                                   (|blacks6|
                                                                                                                    ""
                                                                                                                    (SKOLEM
                                                                                                                     1
                                                                                                                     ("CS0"
                                                                                                                      "_"
                                                                                                                      "_"))
                                                                                                                    ((""
                                                                                                                      (MEASURE-INDUCT
                                                                                                                       "abs(n2 + 1 - n1)"
                                                                                                                       ("n1"
                                                                                                                        "n2"))
                                                                                                                      ((""
                                                                                                                        (SKOLEM
                                                                                                                         1
                                                                                                                         ("X1"
                                                                                                                          "X2"))
                                                                                                                        ((""
                                                                                                                          (FLATTEN)
                                                                                                                          ((""
                                                                                                                            (EXPAND
                                                                                                                             "blacks"
                                                                                                                             +)
                                                                                                                            ((""
                                                                                                                              (AUTO-REWRITE-THEORY
                                                                                                                               "Memory[NODES,SONS,ROOTS]"
                                                                                                                               :ALWAYS?
                                                                                                                               T)
                                                                                                                              ((""
                                                                                                                                (GRIND)
                                                                                                                                NIL)))))))))))))
                                                                                                                   (|blacks7|
                                                                                                                    ""
                                                                                                                    (SKOLEM
                                                                                                                     1
                                                                                                                     ("CS0"
                                                                                                                      "_"
                                                                                                                      "_"))
                                                                                                                    ((""
                                                                                                                      (MEASURE-INDUCT
                                                                                                                       "abs(n2-n1)"
                                                                                                                       ("n1"
                                                                                                                        "n2"))
                                                                                                                      ((""
                                                                                                                        (SKOLEM-TYPEPRED
                                                                                                                         1
                                                                                                                         ("X1"
                                                                                                                          "X2"))
                                                                                                                        ((""
                                                                                                                          (FLATTEN)
                                                                                                                          ((""
                                                                                                                            (EXPAND
                                                                                                                             "blacks"
                                                                                                                             +)
                                                                                                                            ((""
                                                                                                                              (GRIND)
                                                                                                                              NIL))))))))))))

$$$impl1.pvs

Garbage_Collector1[
  NODES : posnat, 
  SONS  : posnat, 
  ROOTS : posnat] : THEORY

BEGIN

  ASSUMING
    roots_within : ASSUMPTION ROOTS <= NODES
  ENDASSUMING

  IMPORTING Coloured_Memory[NODES,SONS,ROOTS]

  MuPC    : TYPE = {MUTATE,COLOUR}  
  CoPC    : TYPE = {COLOUR,TEST_L,APPEND}

  State   : TYPE = [# MU : MuPC, CHI : CoPC, 
                      Q : nat, L : nat , C : Colours, M : Memory #]

  O_State : TYPE = Memory

  s,s1,s2 : VAR State
  n,k     : VAR Node
  i       : VAR Index

  proj(s):O_State = M(s)

  init(s):bool = 
      MU(s) = MUTATE
    & CHI(s) = COLOUR 
    & M(s) = null_array


  %%%%%%%%%%%%%%%%%%%%%%%
  % The MUTATOR Process %
  %%%%%%%%%%%%%%%%%%%%%%%

  Rule_mutate(n,i,k)(s):State =
    IF MU(s) = MUTATE AND accessible(k)(M(s)) THEN 
      s WITH [M := set_son(n,i,k)(M(s)),
              Q := k,
              MU := COLOUR]
    ELSE 
      s
    ENDIF

  Rule_colour_target(s):State =
    IF MU(s) = COLOUR AND Q(s) < NODES THEN 
      s WITH [C := set_colour(Q(s),TRUE)(C(s)),
              MU := MUTATE]
    ELSE 
      s
    ENDIF

  MUTATOR(s1,s2):bool =
       (EXISTS n,i,k: s2 = Rule_mutate(n,i,k)(s1))
    OR s2 = Rule_colour_target(s1)


  %%%%%%%%%%%%%%%%%%%%%%%%%
  % The COLLECTOR Process %
  %%%%%%%%%%%%%%%%%%%%%%%%%

  Rule_stop_colouring(s):State =
    IF CHI(s) = COLOUR AND blackened(C(s),M(s)) THEN
      s WITH [L := 0, CHI := TEST_L]
    ELSE
      s
    ENDIF

  Rule_colour(n)(s):State =
    IF CHI(s) = COLOUR THEN
      s WITH [C := set_colour(n,TRUE)(C(s))]
    ELSE
      s
    ENDIF

  Rule_stop_appending(s):State =
    IF CHI(s) = TEST_L AND L(s) = NODES THEN
      s WITH [CHI := COLOUR]
    ELSE
      s
    ENDIF

  Rule_continue_appending(s):State =
    IF CHI(s) = TEST_L AND L(s) < NODES THEN
      s WITH [CHI := APPEND]
    ELSE 
      s 
    ENDIF

  Rule_black_to_white(s):State =
    IF CHI(s) = APPEND AND L(s) < NODES AND colour(L(s))(C(s)) THEN
      s WITH [C := set_colour(L(s),FALSE)(C(s)),
              L := L(s)+1,
              CHI := TEST_L]
    ELSE 
      s 
    ENDIF

  Rule_append_white(s):State =
    IF CHI(s) = APPEND AND L(s) < NODES AND NOT colour(L(s))(C(s)) THEN
      s WITH [M := append_to_free(L(s))(M(s)),
              L := L(s) + 1,
              CHI := TEST_L]
    ELSE 
      s 
    ENDIF

  COLLECTOR(s1,s2):bool =
       s2 = Rule_stop_colouring(s1) 
    OR (EXISTS n: s2 = Rule_colour(n)(s1))
    OR s2 = Rule_stop_appending(s1) 
    OR s2 = Rule_continue_appending(s1) 
    OR s2 = Rule_black_to_white(s1) 
    OR s2 = Rule_append_white(s1)

  %%%%%%%%%%%%%%%%%%%%%%%%%%%
  % The Transition Relation %
  %%%%%%%%%%%%%%%%%%%%%%%%%%%

  next(s1,s2):bool =
    MUTATOR(s1,s2) OR
    COLLECTOR(s1,s2) OR
    s2 = s1

END Garbage_Collector1


Garbage_Collector1_Inv[
  NODES : posnat, 
  SONS  : posnat, 
  ROOTS : posnat] : THEORY

BEGIN

  ASSUMING
    roots_within : ASSUMPTION ROOTS <= NODES
  ENDASSUMING

  IMPORTING Memory_Properties[NODES,SONS,ROOTS]
  IMPORTING Garbage_Collector1[NODES,SONS,ROOTS]
  IMPORTING Invariant_Predicates[State]

  s : VAR State

  inv1(s):bool =
    CHI(s)=APPEND AND L(s) < NODES AND accessible(L(s))(M(s)) 
      IMPLIES 
    colour(L(s))(C(s))

  inv2(s):bool =
    CHI(s)=TEST_L OR CHI(s)=APPEND IMPLIES blackened(L(s))(C(s),M(s))

  I : pred[State] = inv1 & inv2

  pi : pred[pred[State]] = preserved(init,next)(I)

  i_inv1 : LEMMA I IMPLIES inv1
  i_inv2 : LEMMA I IMPLIES inv2

  p_inv1 : LEMMA pi(inv1)
  p_inv2 : LEMMA pi(inv2)

  p_I : LEMMA pi(I)

  inv : LEMMA invariant(init,next)(I)

END Garbage_Collector1_Inv


$$$impl1.prf
(|Garbage_Collector1|
 (IMPORTING1_TCC1 "" (LEMMA "roots_within") (("" (PROPAX) NIL)))
 (|Rule_colour_target_TCC1| "" (SUBTYPE-TCC) NIL)
 (|Rule_black_to_white_TCC1| "" (SUBTYPE-TCC) NIL)
 (|Rule_append_white_TCC1| "" (SUBTYPE-TCC) NIL))(|Garbage_Collector1_Inv|
                                                  (IMPORTING1_TCC1
                                                   ""
                                                   (LEMMA "roots_within")
                                                   (("" (PROPAX) NIL)))
                                                  (|inv1_TCC1|
                                                   ""
                                                   (SUBTYPE-TCC)
                                                   NIL)
                                                  (|i_inv1| "" (IMPLY) NIL)
                                                  (|i_inv2| "" (IMPLY) NIL)
                                                  (|p_inv1|
                                                   ""
                                                   (SUBGOALS
                                                    AUTO-REWRITE-INV-A)
                                                   (("1"
                                                     (LEMMA "accessible1")
                                                     (("1"
                                                       (LEMMA-ACTION)
                                                       NIL)))
                                                    ("2"
                                                     (AUTO-REWRITE! "colour1")
                                                     (("2"
                                                       (LEMMA-ACTION)
                                                       NIL)))
                                                    ("3" (ACTION) NIL)
                                                    ("4" (ACTION) NIL)
                                                    ("5" (ACTION) NIL)
                                                    ("6"
                                                     (LEMMA "i_inv2")
                                                     (("6"
                                                       (LEMMA "blackened1")
                                                       (("6"
                                                         (LEMMA-ACTION)
                                                         NIL)))))
                                                    ("7" (ACTION) NIL)
                                                    ("8" (ACTION) NIL)
                                                    ("9" (ACTION) NIL)))
                                                  (|p_inv2|
                                                   ""
                                                   (SUBGOALS
                                                    AUTO-REWRITE-INV-A)
                                                   (("1"
                                                     (AUTO-REWRITE
                                                      "blackened2")
                                                     (("1"
                                                       (LEMMA-ACTION)
                                                       NIL)))
                                                    ("2"
                                                     (AUTO-REWRITE
                                                      "blackened3")
                                                     (("2"
                                                       (LEMMA-ACTION)
                                                       NIL)))
                                                    ("3"
                                                     (AUTO-REWRITE
                                                      "blackened6")
                                                     (("3"
                                                       (LEMMA-ACTION)
                                                       NIL)))
                                                    ("4" (ACTION) NIL)
                                                    ("5" (ACTION) NIL)
                                                    ("6" (ACTION) NIL)
                                                    ("7"
                                                     (AUTO-REWRITE
                                                      "blackened4")
                                                     (("7"
                                                       (LEMMA-ACTION)
                                                       NIL)))
                                                    ("8"
                                                     (LEMMA "i_inv1")
                                                     (("8"
                                                       (AUTO-REWRITE
                                                        "blackened5")
                                                       (("8"
                                                         (LEMMA-ACTION)
                                                         NIL)))))
                                                    ("9" (ACTION) NIL)))
                                                  (|p_I|
                                                   ""
                                                   (LEMMA "p_inv1")
                                                   ((""
                                                     (LEMMA "p_inv2")
                                                     (("" (PRES-ALL) NIL)))))
                                                  (|inv| "" (INV-ALL) NIL))
$$$spec.pvs

Garbage_Collector[
  NODES : posnat, 
  SONS  : posnat, 
  ROOTS : posnat] : THEORY

BEGIN

  ASSUMING
    roots_within : ASSUMPTION ROOTS <= NODES
  ENDASSUMING

  IMPORTING Memory[NODES,SONS,ROOTS]

  State   : TYPE = Memory
  O_State : TYPE = Memory

  s,s1,s2 : VAR State
  n,k     : VAR Node
  i       : VAR Index

  proj(s):O_State = s

  init(s):bool = (s = null_array)

  Rule_mutate(n,i,k)(s):State =
    IF accessible(k)(s) THEN 
      set_son(n,i,k)(s)
    ELSE 
      s
    ENDIF

  Rule_append(n)(s):State =
    IF NOT accessible(n)(s) THEN
      append_to_free(n)(s)
    ELSE 
      s
    ENDIF

  next(s1,s2):bool =
    (EXISTS n,i,k: s2 = Rule_mutate(n,i,k)(s1)) OR
    (EXISTS n: s2 = Rule_append(n)(s1)) OR
    s2 = s1

END Garbage_Collector



$$$spec.prf
(|Garbage_Collector|
 (IMPORTING1_TCC1 "" (LEMMA "roots_within") (("" (PROPAX) NIL)))
 (|next_TCC1| "" (ASSUMING-TCC)))

$$$refine1.pvs

Refinement1[
  NODES : posnat, 
  SONS  : posnat, 
  ROOTS : posnat] : THEORY

BEGIN

  ASSUMING
    roots_within : ASSUMPTION ROOTS <= NODES
  ENDASSUMING

  S  : THEORY = Garbage_Collector [NODES,SONS,ROOTS]
  I1 : THEORY = Garbage_Collector1[NODES,SONS,ROOTS]
  IMPORTING Garbage_Collector1_Inv[NODES,SONS,ROOTS]

  s     : VAR I1.State
  r1,r2 : VAR (I)
  n,k   : VAR Node
  i     : VAR Index
  cs    : VAR Colours

  abs(s):S.State = M(s)

  sim_mutate : LEMMA
    (EXISTS n,i,k: r2 = Rule_mutate(n,i,k)(r1)) IMPLIES
      (EXISTS n,i,k: abs(r2) = Rule_mutate(n,i,k)(abs(r1))) OR
      abs(r2) = abs(r1)

  sim_colour_target : LEMMA
    r2 = Rule_colour_target(r1) IMPLIES
      abs(r2) = abs(r1)

  sim_stop_colouring : LEMMA
    r2 = Rule_stop_colouring(r1) IMPLIES
      abs(r2) = abs(r1)

  sim_colour : LEMMA
    (EXISTS n: r2 = Rule_colour(n)(r1)) IMPLIES
      abs(r2) = abs(r1)

  sim_stop_appending : LEMMA
    r2 = Rule_stop_appending(r1) IMPLIES
      abs(r2) = abs(r1)

  sim_continue_appending : LEMMA
    r2 = Rule_continue_appending(r1) IMPLIES
      abs(r2) = abs(r1)

  sim_black_to_white : LEMMA
    r2 = Rule_black_to_white(r1) IMPLIES
      abs(r2) = abs(r1)

  sim_append_white : LEMMA
    r2 = Rule_append_white(r1) IMPLIES
      (EXISTS n: abs(r2) = Rule_append(n)(abs(r1))) OR abs(r2) = abs(r1)

  next_h : LEMMA 
    next(r1,r2) IMPLIES next(abs(r1),abs(r2))

  R1 : THEORY = 
    Refinement[S.O_State,
      S.State,S.init,S.next,S.proj,
      I1.State,I1.init,I1.next,I1.proj,
      abs,I]      

END Refinement1


$$$refine1.prf
(|Refinement1| (S_TCC1 "" (LEMMA "roots_within") (("" (PROPAX) NIL)))
 (|sim_mutate| "" (SIMULATE-INIT AUTO-REWRITE-REF-A) (("" (SIMULATE) NIL)))
 (|sim_colour_target| "" (SIMULATE-INIT AUTO-REWRITE-REF-A)
  (("" (SIMULATE) NIL)))
 (|sim_stop_colouring| "" (SIMULATE-INIT AUTO-REWRITE-REF-A)
  (("" (SIMULATE) NIL)))
 (|sim_colour| "" (SIMULATE-INIT AUTO-REWRITE-REF-A) (("" (SIMULATE) NIL)))
 (|sim_stop_appending| "" (SIMULATE-INIT AUTO-REWRITE-REF-A)
  (("" (SIMULATE) NIL)))
 (|sim_continue_appending| "" (SIMULATE-INIT AUTO-REWRITE-REF-A)
  (("" (SIMULATE) NIL)))
 (|sim_black_to_white| "" (SIMULATE-INIT AUTO-REWRITE-REF-A)
  (("" (SIMULATE) NIL)))
 (|sim_append_white| "" (SIMULATE-INIT AUTO-REWRITE-REF-A)
  (("" (LEMMA "i_inv1") (("" (LEMMA-SIMULATE) NIL)))))
 (|next_h| "" (BEGIN-NEXT)
  (("1" (LEMMA "sim_mutate") (("1" (END-NEXT) NIL)))
   ("2" (LEMMA "sim_colour_target") (("2" (LEMMA-SIMULATE) NIL)))
   ("3" (LEMMA "sim_stop_colouring") (("3" (LEMMA-SIMULATE) NIL)))
   ("4" (LEMMA "sim_colour") (("4" (LEMMA-SIMULATE) NIL)))
   ("5" (LEMMA "sim_stop_appending") (("5" (END-NEXT) NIL)))
   ("6" (LEMMA "sim_continue_appending") (("6" (END-NEXT) NIL)))
   ("7" (LEMMA "sim_black_to_white") (("7" (END-NEXT) NIL)))
   ("8" (LEMMA "sim_append_white") (("8" (END-NEXT) NIL)))
   ("9" (ASSERT) NIL)))
 (R1_TCC1 "" (GRIND)
  (("" (EXPAND "proj") (("" (EXPAND "abs") (("" (PROPAX) NIL)))))))
 (R1_TCC2 "" (SKOSIMP)
  (("" (EXPAND "init") (("" (EXPAND "abs") (("" (ASSERT) NIL)))))))
 (R1_TCC3 "" (LEMMA "next_h") (("" (PROPAX) NIL)))
 (R1_TCC4 "" (LEMMA "inv") (("" (PROPAX) NIL))))
